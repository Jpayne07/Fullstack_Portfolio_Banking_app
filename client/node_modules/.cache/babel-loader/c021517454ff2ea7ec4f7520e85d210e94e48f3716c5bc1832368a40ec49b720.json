{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Components/Transaction_Id_module.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport AppContext from '../AppContext';\nimport { useParams } from 'react-router-dom';\nimport Pencil from '../images/Pencil.svg';\nimport EditableText from './EditableText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Transaction_Id_module() {\n  _s();\n  const {\n    user\n  } = useContext(AppContext);\n  const {\n    id\n  } = useParams();\n  const uniqueDateSet = new Set();\n  // const transactionList = user.map(user=>{\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bank_account_container\",\n    children: user.accounts.filter(account => account.transactions.some(transaction => transaction.id === Number(id))).map(account => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            padding: \"15px 0\",\n            textAlign: \"left\"\n          },\n          children: `${account.bank.name}: ${account.account_type}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction_headers\",\n          id: \"singular\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"ACCT#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), account.transactions.filter(transaction => transaction.id === Number(id)).map(transaction => {\n          // date below\n          const pad = num => String(num).padStart(2, '0');\n          const d = new Date(transaction.created_at);\n          const formattedDate = `${d.getFullYear()}-${pad(d.getMonth() + 1)}-${pad(d.getDate())} ${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\n          const shouldRenderDate = uniqueDateSet.has(formattedDate);\n          uniqueDateSet.add(formattedDate);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction_rows\",\n            id: \"singular\",\n            children: [/*#__PURE__*/_jsxDEV(EditableText, {\n              initialText: transaction.title,\n              transactionId: id,\n              keyName: 'title'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(EditableText, {\n              initialText: formattedDate,\n              transactionId: id,\n              keyName: 'created_at'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: transaction.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: transaction.card.card_number.toString().slice(-4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: \"4px\"\n                },\n                children: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(EditableText, {\n                initialText: transaction.amount,\n                transactionId: id,\n                keyName: 'amount'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, transaction.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 18\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 14\n  }, this);\n}\n_s(Transaction_Id_module, \"HyxyW11nz0tgZJb9LLnQENXKUN0=\", false, function () {\n  return [useParams];\n});\n_c = Transaction_Id_module;\nexport default Transaction_Id_module;\nvar _c;\n$RefreshReg$(_c, \"Transaction_Id_module\");","map":{"version":3,"names":["React","useContext","AppContext","useParams","Pencil","EditableText","jsxDEV","_jsxDEV","Transaction_Id_module","_s","user","id","uniqueDateSet","Set","className","children","accounts","filter","account","transactions","some","transaction","Number","map","style","width","padding","textAlign","bank","name","account_type","fileName","_jsxFileName","lineNumber","columnNumber","pad","num","String","padStart","d","Date","created_at","formattedDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","shouldRenderDate","has","add","initialText","title","transactionId","keyName","card","card_number","toString","slice","display","alignItems","marginRight","amount","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Components/Transaction_Id_module.js"],"sourcesContent":["import React, {useContext} from 'react'\nimport AppContext from '../AppContext';\n\nimport { useParams } from 'react-router-dom';\nimport Pencil from '../images/Pencil.svg'\nimport EditableText from './EditableText';\n\n\nfunction Transaction_Id_module() {\n  const { user} = useContext(AppContext)\n  const { id } = useParams()\n  const uniqueDateSet = new Set();\n    // const transactionList = user.map(user=>{\n      return <div className='bank_account_container'>\n       \n        {user.accounts\n        .filter((account) => account.transactions.some((transaction) => transaction.id === Number(id))\n      )\n        .map(account=>{\n          return <div style={{width:\"100%\"}}>\n            <h1 style={{padding:\"15px 0\", textAlign:\"left\"}}>{`${account.bank.name}: ${account.account_type}`}</h1>\n            <div className=\"transaction_headers\" id='singular'>\n            <h4>Description</h4>\n                  <h4>Date</h4>\n                  <h4>ID</h4>\n                  <h4>ACCT#</h4>\n                  <h4>Amount</h4>\n            </div>\n            {account.transactions.filter(transaction =>transaction.id === Number(id))\n            .map((transaction) => {\n              // date below\n              const pad = (num) => String(num).padStart(2, '0');\n\n              const d = new Date(transaction.created_at);\n              const formattedDate = `${d.getFullYear()}-${pad(d.getMonth() + 1)}-${pad(d.getDate())} ${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\n\n          \n          const shouldRenderDate = uniqueDateSet.has(formattedDate);\n          uniqueDateSet.add(formattedDate)\n          \n            return(\n              \n            <div className='transaction_rows' key={transaction.id} id=\"singular\">\n                 {/* <p className=\"time\">\n                   {shouldRenderDate?null:date}\n                </p> */}\n                <EditableText initialText={transaction.title} transactionId={id}  keyName={'title'}/>\n                <EditableText initialText={formattedDate} transactionId={id}  keyName={'created_at'}/>\n                <p>{transaction.id}</p>\n                <p>{transaction.card.card_number.toString().slice(-4)}</p>\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <span style={{ marginRight: \"4px\" }}>$</span>\n                <EditableText initialText={transaction.amount} transactionId={id} keyName={'amount'} />\n                </div>                \n                        </div>\n                        )\n                    }\n                  )}\n\n                </div>\n  }\n)\n}\n</div>\n\n}\n\nexport default Transaction_Id_module"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}