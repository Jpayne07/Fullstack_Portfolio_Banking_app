{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Components/InsightsComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport AppContext from '../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Insights() {\n  _s();\n  const {\n    accounts\n  } = useContext(AppContext);\n  const transactionCategories = {};\n  accounts.forEach(account => {\n    account.transactions.forEach(transaction => {\n      const category = transaction.category;\n      if (transaction.type = \"Negative\") {\n        if (category in transactionCategories) {\n          transactionCategories.category += transaction.amount;\n        } else {\n          transactionCategories = transaction.amount;\n        }\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bank_account_container\",\n    style: {\n      flexWrap: \"wrap\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction_headers\",\n      style: {\n        gridTemplateColumns: \"3fr 2fr\",\n        width: \"100%\",\n        fontSize: \"1.5rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), Object.entries(transactionCategories).map(([key, value]) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction_rows\",\n          style: {\n            gridTemplateColumns: \"3fr 2fr\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"transaction_name\",\n            style: {\n              fontSize: \"1.2rem\"\n            },\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"Price\",\n            style: {\n              fontSize: \"1.2rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"DollaBill\",\n              children: \"$ \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 57\n            }, this), value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n}\n_s(Insights, \"jn5Zr+2jH0T4m2S/ZFsYWXB+k4w=\");\n_c = Insights;\nexport default Insights;\nvar _c;\n$RefreshReg$(_c, \"Insights\");","map":{"version":3,"names":["React","useContext","AppContext","jsxDEV","_jsxDEV","Insights","_s","accounts","transactionCategories","forEach","account","transactions","transaction","category","type","amount","className","style","flexWrap","children","gridTemplateColumns","width","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","value","id","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Components/InsightsComponent.js"],"sourcesContent":["import React, {useContext} from 'react'\nimport AppContext from '../AppContext'\n\n\n\nfunction Insights() {\n  const { accounts } = useContext(AppContext);\n  const transactionCategories = {}\n  accounts.forEach(account => {\n    account.transactions.forEach((transaction)=>{\n      const category = transaction.category\n      if (transaction.type = \"Negative\"){\n        if (category in transactionCategories){\n          transactionCategories.category += transaction.amount\n        }\n        else{\n          transactionCategories = transaction.amount\n        }\n      }\n    })\n  });\n  return (\n  <div className='bank_account_container' style={{flexWrap:\"wrap\"}}>\n    <div className=\"transaction_headers\" style={{gridTemplateColumns:\"3fr 2fr\", width:\"100%\",fontSize:\"1.5rem\"}}>\n      <h4>Category</h4>\n      <h4>Amount</h4>\n    </div>\n    {Object.entries(transactionCategories)\n      .map(([key, value])=>{\n        return(\n        <div style={{width:\"100%\"}}key={key} >\n          <div className='transaction_rows'  style={{gridTemplateColumns: \"3fr 2fr\"}}>\n            <p id='transaction_name' style = {{fontSize:\"1.2rem\"}}>{key}</p>\n            <p id='Price' style = {{fontSize:\"1.2rem\"}}><span id='DollaBill'>$ </span>{value}</p>\n          </div>\n        </div>)\n      })\n    }\n  </div>)\n}\n\nexport default Insights"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}