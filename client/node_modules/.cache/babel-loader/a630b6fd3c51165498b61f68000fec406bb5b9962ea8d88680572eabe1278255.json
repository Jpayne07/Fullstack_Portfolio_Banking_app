{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AppContext=/*#__PURE__*/createContext();const API_URL=process.env.REACT_APP_API_URL;export const AppProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(undefined);const[categories,setCategories]=useState([]);const[loading,setLoading]=useState(true);const[errors,setErrors]=useState([]);const[banks,setBanks]=useState([]);useEffect(()=>{fetch(\"\".concat(API_URL,\"/api/insights\")).then(r=>r.json()).then(insightsData=>{setCategories(insightsData);}).catch(error=>{console.log(\"Error fetching insights\",error);setLoading(false);});},[user]);useEffect(()=>{fetch(\"\".concat(API_URL,\"/api/banks\")).then(r=>r.json()).then(banks=>{setBanks(banks);}).catch(error=>{console.log(\"Error in fetching banks\",error);setLoading(false);});},[]);useEffect(()=>{setLoading(true);fetch(\"\".concat(API_URL,\"/api/check_session\")).then(response=>{if(!response.ok){throw new Error('Network response was not ok');}return response.json();}).then(user=>{setUser(user);}).catch(error=>{console.error(\"Error fetching session:\",error);}).finally(()=>{setLoading(false);});},[]);function handleLogin(username,password,setSubmitting,navigate){fetch(\"\".concat(API_URL,\"/api/login\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,password})}).then(r=>{if(r.ok){r.json().then(user=>{setUser(user);navigate('/');});}else{r.json().then(err=>{setErrors([err.message||\"Invalid login credentials. Please try again.\"]);});}}).catch(err=>{setErrors([err.message||\"Network error. Please try again later.\"]);}).finally(()=>{setSubmitting(false);});}// this is for the login without signup\nfunction mockLogin(username,password,navigate){console.log(\"Nav test\",navigate);fetch(\"${API_URL}/api/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,password})}).then(r=>{if(r.ok){r.json().then(user=>{setUser(user);navigate('/');});}else{r.json().then(err=>{setErrors([err.message||\"Invalid login credentials. Please try again.\"]);});}}).catch(err=>{setErrors([err.message||\"Network error. Please try again later.\"]);});}// this will seed transactions on individual account pages\nfunction handleTransactionSeed(){fetch(\"\".concat(API_URL,\"/api/transactionseed\"),{method:'POST',headers:{'Content-Type':'application/json'}}).then(response=>response.json()).then(document.location.reload()).catch(error=>console.error('Error:',error));}return/*#__PURE__*/_jsx(AppContext.Provider,{value:{loading,banks,categories,user,setUser,setLoading,setCategories,handleLogin,errors,handleTransactionSeed,mockLogin},children:children});};export default AppContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","AppContext","API_URL","process","env","REACT_APP_API_URL","AppProvider","_ref","children","user","setUser","undefined","categories","setCategories","loading","setLoading","errors","setErrors","banks","setBanks","fetch","concat","then","r","json","insightsData","catch","error","console","log","response","ok","Error","finally","handleLogin","username","password","setSubmitting","navigate","method","headers","body","JSON","stringify","err","message","mockLogin","handleTransactionSeed","document","location","reload","Provider","value"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect  } from 'react';\n\n\nconst AppContext = createContext();\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport const AppProvider = ({ children }) => {\n  const [user, setUser] = useState(undefined);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [errors, setErrors] = useState([]);\n  const [banks, setBanks] = useState([])\n\n  useEffect(() => {\n      fetch(`${API_URL}/api/insights`)\n      .then((r) => r.json())\n      .then(insightsData => {\n      setCategories(insightsData);\n    }).catch(error => {\n      console.log(\"Error fetching insights\", error)\n      setLoading(false);\n      \n    });\n  }, [user]);\n  \n  useEffect(() => {\n    fetch(`${API_URL}/api/banks`)\n    .then((r) => r.json())\n    .then(banks => {\n      setBanks(banks);\n  }).catch(error => {\n    console.log(\"Error in fetching banks\", error)\n    setLoading(false);\n    \n  });\n}, []);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`${API_URL}/api/check_session`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((user) => {\n        setUser(user);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching session:\", error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  function handleLogin(username, password, setSubmitting, navigate) {\n    \n    fetch(`${API_URL}/api/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((user) => {\n            setUser(user);\n            navigate('/')\n          });\n        } else {\n          r.json().then((err) => {\n            setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n          });\n        }\n      })\n      .catch((err) => {\n        setErrors([err.message || \"Network error. Please try again later.\"]);\n      })\n      .finally(()=>{\n        setSubmitting(false)\n      })\n      \n  }\n  // this is for the login without signup\n  function mockLogin(username, password, navigate) {\n    console.log(\"Nav test\", navigate)\n    fetch(\"${API_URL}/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((user) => {\n            setUser(user);\n            navigate('/')\n          });\n        } else {\n          r.json().then((err) => {\n            setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n          });\n        }\n      })\n      .catch((err) => {\n        setErrors([err.message || \"Network error. Please try again later.\"]);\n      })\n      \n  }\n  // this will seed transactions on individual account pages\n  function handleTransactionSeed() {\n    fetch(`${API_URL}/api/transactionseed`, {\n        method: 'POST',  \n        headers: {\n            'Content-Type': 'application/json',  \n        },\n    })\n    .then(response => response.json())\n    .then(document.location.reload())\n    .catch(error => console.error('Error:', error)); \n}\n  \n      \n\n  return (\n    <AppContext.Provider value={{loading,\n     banks,\n     categories,\n     user,\n     setUser,\n     setLoading,\n     setCategories,\n     handleLogin,\n     errors,\n     handleTransactionSeed,\n     mockLogin }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}