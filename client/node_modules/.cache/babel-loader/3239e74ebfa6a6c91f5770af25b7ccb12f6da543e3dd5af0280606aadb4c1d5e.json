{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(undefined);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    fetch('/api/insights').then(r => r.json()).then(insightsData => {\n      setCategories(insightsData);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setErrors(prev => [...prev, 'Failed to fetch insights data.']);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"/api/check_session\").then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(user => {\n      console.log('user before state', user);\n      setUser(user);\n    }).catch(error => {\n      console.error(\"Error fetching session:\", error);\n      // Optionally set an error state here\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  function handleLogin(username, password, navigate, setSubmitting) {\n    fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(user => {\n          setUser(user);\n          navigate('/');\n        });\n      } else {\n        r.json().then(err => {\n          setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n        });\n      }\n    }).catch(err => {\n      setErrors([err.message || \"Network error. Please try again later.\"]);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      categories,\n      user,\n      setUser,\n      setLoading,\n      setCategories,\n      handleLogin,\n      errors\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"YJ4ndup6hd4pGXbb2JKylmKzspw=\");\n_c = AppProvider;\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","user","setUser","undefined","categories","setCategories","loading","setLoading","errors","setErrors","fetch","then","r","json","insightsData","catch","error","console","prev","finally","response","ok","Error","log","handleLogin","username","password","navigate","setSubmitting","method","headers","body","JSON","stringify","err","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nconst AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n  const [user, setUser] = useState(undefined);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [errors, setErrors] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch('/api/insights')\n      .then((r) => r.json())\n      .then((insightsData) => {\n        setCategories(insightsData);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n        setErrors(prev => [...prev, 'Failed to fetch insights data.']);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"/api/check_session\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((user) => {\n        console.log('user before state',user)\n        setUser(user);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching session:\", error);\n        // Optionally set an error state here\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  function handleLogin(username, password, navigate, setSubmitting) {\n    \n    fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((user) => {\n            setUser(user);\n            navigate('/')\n          });\n        } else {\n          r.json().then((err) => {\n            setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n          });\n        }\n      })\n      .catch((err) => {\n        setErrors([err.message || \"Network error. Please try again later.\"]);\n      })\n      .finally(()=>{\n        setSubmitting(false)\n      })\n      \n  }\n\n  \n      \n\n  return (\n    <AppContext.Provider value={{loading, categories, user, setUser, setLoading, setCategories, handleLogin, errors }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,UAAU,gBAAGL,aAAa,CAAC,CAAC;AAElC,OAAO,MAAMM,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACU,SAAS,CAAC;EAC3C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,IAAI,CAAC;IAChBG,KAAK,CAAC,eAAe,CAAC,CACnBC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAAEG,YAAY,IAAK;MACtBT,aAAa,CAACS,YAAY,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CP,SAAS,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE,gCAAgC,CAAC,CAAC;IAChE,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACbZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,IAAI,CAAC;IAChBG,KAAK,CAAC,oBAAoB,CAAC,CACxBC,IAAI,CAAES,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACP,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEV,IAAI,IAAK;MACdgB,OAAO,CAACM,GAAG,CAAC,mBAAmB,EAACtB,IAAI,CAAC;MACrCC,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC,CACDc,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC,CAAC,CACDG,OAAO,CAAC,MAAM;MACbZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,SAASiB,WAAWA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,aAAa,EAAE;IAEhElB,KAAK,CAAC,YAAY,EAAE;MAClBmB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC,CACCf,IAAI,CAAEC,CAAC,IAAK;MACX,IAAIA,CAAC,CAACS,EAAE,EAAE;QACRT,CAAC,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEV,IAAI,IAAK;UACtBC,OAAO,CAACD,IAAI,CAAC;UACb0B,QAAQ,CAAC,GAAG,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,MAAM;QACLf,CAAC,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEuB,GAAG,IAAK;UACrBzB,SAAS,CAAC,CAACyB,GAAG,CAACC,OAAO,IAAI,8CAA8C,CAAC,CAAC;QAC5E,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,CACDpB,KAAK,CAAEmB,GAAG,IAAK;MACdzB,SAAS,CAAC,CAACyB,GAAG,CAACC,OAAO,IAAI,wCAAwC,CAAC,CAAC;IACtE,CAAC,CAAC,CACDhB,OAAO,CAAC,MAAI;MACXS,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC;EAEN;EAKA,oBACEhC,OAAA,CAACC,UAAU,CAACuC,QAAQ;IAACC,KAAK,EAAE;MAAC/B,OAAO;MAAEF,UAAU;MAAEH,IAAI;MAAEC,OAAO;MAAEK,UAAU;MAAEF,aAAa;MAAEmB,WAAW;MAAEhB;IAAO,CAAE;IAAAT,QAAA,EAC/GA;EAAQ;IAAAuC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACzC,EAAA,CAlFWF,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAoFxB,eAAeD,UAAU;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}