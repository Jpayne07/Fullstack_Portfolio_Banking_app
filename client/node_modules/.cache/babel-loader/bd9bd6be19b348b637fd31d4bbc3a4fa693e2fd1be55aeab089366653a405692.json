{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Pages/TransactionsIndex.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport '../App.css';\nimport TransactionIndexModule from '../Components/Transaction_Index_Module';\nimport AppContext from '../AppContext';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Transactions() {\n  _s();\n  const {\n    banks,\n    setBanks,\n    setLoading,\n    setAccounts,\n    setCategories,\n    categories,\n    user\n  } = useContext(AppContext);\n  function handleClick() {\n    fetch('/api/transactionseed', {\n      method: 'POST',\n      // Use POST for creating data\n      headers: {\n        'Content-Type': 'application/json' // Send request as JSON\n      }\n    }).then(response => response.json()) // Wait for JSON response\n    // .then(data => {\n    //   Promise.all([\n    //     fetch('/api/banks').then((r) => r.json()),\n    //     fetch('/api/account').then((r) => r.json()),\n    //     fetch('/api/insights').then((r) => r.json())\n    //   ]).then(([banksData, accountsData, insightsData]) => {\n    //     setBanks(banksData);\n    //     setAccounts(accountsData)\n    //     setCategories(insightsData);\n    //     setLoading(false);\n    //   }).catch(error => {\n    //     console.error('Error fetching data:', error);\n    //     setLoading(false);\n    //   });  // Handle the response\n    // })\n    .catch(error => console.error('Error:', error)); // Handle any errors\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background_wrapper\",\n      id: \"test\",\n      style: {\n        width: \"800px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"_wrapper\",\n        id: \"test\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TransactionIndexModule, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transactions_button_break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"transactions_rng\",\n          onClick: handleClick,\n          children: [\" \", \"Generate Random Transactions\", /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"tooltiptext\",\n            children: \"Click to Generate a random set of transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Transactions, \"i6aBhEbJxhDUQw/1KJher9QsfXY=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useContext","TransactionIndexModule","AppContext","useParams","jsxDEV","_jsxDEV","Transactions","_s","banks","setBanks","setLoading","setAccounts","setCategories","categories","user","handleClick","fetch","method","headers","then","response","json","catch","error","console","className","children","id","style","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","class","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Pages/TransactionsIndex.js"],"sourcesContent":["import React, {useContext} from 'react'\nimport '../App.css'\nimport TransactionIndexModule from '../Components/Transaction_Index_Module'\nimport AppContext from '../AppContext'\nimport { useParams } from 'react-router-dom'\n\nfunction Transactions() {\n\n  const { banks, setBanks, setLoading, setAccounts, setCategories, categories, user} = useContext(AppContext);\n      function handleClick() {\n        fetch('/api/transactionseed', {\n            method: 'POST',  // Use POST for creating data\n            headers: {\n                'Content-Type': 'application/json',  // Send request as JSON\n            },\n        })\n        .then(response => response.json())  // Wait for JSON response\n        // .then(data => {\n        //   Promise.all([\n        //     fetch('/api/banks').then((r) => r.json()),\n        //     fetch('/api/account').then((r) => r.json()),\n        //     fetch('/api/insights').then((r) => r.json())\n        //   ]).then(([banksData, accountsData, insightsData]) => {\n        //     setBanks(banksData);\n        //     setAccounts(accountsData)\n        //     setCategories(insightsData);\n        //     setLoading(false);\n        //   }).catch(error => {\n        //     console.error('Error fetching data:', error);\n        //     setLoading(false);\n        //   });  // Handle the response\n        // })\n        .catch(error => console.error('Error:', error));  // Handle any errors\n    }\n    \n    \n  return (\n    <div className='page_wrapper'>\n    <div className='background_wrapper' id='test' style={{width:\"800px\"}}>\n    <div className='_wrapper' id='test'>\n      \n      <h2>Transactions</h2>\n      <TransactionIndexModule user = {user}/>\n      <div className='transactions_button_break'></div>\n      <button className='transactions_rng' onClick={handleClick}> {/*need to setup request response cycle in the app api*/ }\n      Generate Random Transactions \n            <span class=\"tooltiptext\">            \n            Click to Generate a random set of transactions\n            </span>\n        </button>\n        </div>\n    </div>\n  \n    </div>\n  )\n}\n\nexport default Transactions"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,sBAAsB,MAAM,wCAAwC;AAC3E,OAAOC,UAAU,MAAM,eAAe;AACtC,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAEtB,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,WAAW;IAAEC,aAAa;IAAEC,UAAU;IAAEC;EAAI,CAAC,GAAGd,UAAU,CAACE,UAAU,CAAC;EACvG,SAASa,WAAWA,CAAA,EAAG;IACrBC,KAAK,CAAC,sBAAsB,EAAE;MAC1BC,MAAM,EAAE,MAAM;MAAG;MACjBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB,CAAG;MACzC;IACJ,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAE;IACpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA,CACCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAE;EACtD;EAGF,oBACElB,OAAA;IAAKoB,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC7BrB,OAAA;MAAKoB,SAAS,EAAC,oBAAoB;MAACE,EAAE,EAAC,MAAM;MAACC,KAAK,EAAE;QAACC,KAAK,EAAC;MAAO,CAAE;MAAAH,QAAA,eACrErB,OAAA;QAAKoB,SAAS,EAAC,UAAU;QAACE,EAAE,EAAC,MAAM;QAAAD,QAAA,gBAEjCrB,OAAA;UAAAqB,QAAA,EAAI;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB5B,OAAA,CAACJ,sBAAsB;UAACa,IAAI,EAAIA;QAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACvC5B,OAAA;UAAKoB,SAAS,EAAC;QAA2B;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjD5B,OAAA;UAAQoB,SAAS,EAAC,kBAAkB;UAACS,OAAO,EAAEnB,WAAY;UAAAW,QAAA,GAAC,GAAC,EAA0D,8BAEhH,eAAArB,OAAA;YAAM8B,KAAK,EAAC,aAAa;YAAAT,QAAA,EAAC;UAE1B;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV;AAAC1B,EAAA,CAjDQD,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAmDrB,eAAeA,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}