{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Pages/TransactionsIndex.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport '../App.css';\nimport TransactionIndexModule from '../Components/Transaction_Index_Module';\nimport AppContext from '../AppContext';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Transactions() {\n  _s();\n  const {\n    banks,\n    setBanks,\n    setLoading,\n    setAccounts,\n    setCategories,\n    categories\n  } = useContext(AppContext);\n  function handleClick() {\n    fetch('/api/transactionseed', {\n      method: 'POST',\n      // Use POST for creating data\n      headers: {\n        'Content-Type': 'application/json' // Send request as JSON\n      }\n    }).then(response => response.json()) // Wait for JSON response\n    .then(data => {\n      Promise.all([fetch('/api/banks').then(r => r.json()), fetch('/api/account').then(r => r.json()), fetch('/api/insights').then(r => r.json())]).then(([banksData, accountsData, insightsData]) => {\n        console.log(\"Existing categories\", categories);\n        setBanks(banksData);\n        setAccounts(accountsData);\n        setCategories(insightsData);\n        console.log(\"New categories\", categories);\n        setLoading(false);\n        console.log(\"From effect:\", accountsData);\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }); // Handle the response\n    }).catch(error => console.error('Error:', error)); // Handle any errors\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background_wrapper\",\n      id: \"test\",\n      style: {\n        width: \"800px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"_wrapper\",\n        style: {\n          width: \"800px\"\n        },\n        id: \"test\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TransactionIndexModule, {\n          banks: banks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transactions_button_break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"transactions_rng\",\n          onClick: handleClick,\n          children: [\" \", \"Generate Random Transactions\", /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"tooltiptext\",\n            children: \"Click to Generate a random set of transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Transactions, \"4S9dbdZ8spcEMRKV1ZtauBm36rs=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useContext","TransactionIndexModule","AppContext","useParams","jsxDEV","_jsxDEV","Transactions","_s","banks","setBanks","setLoading","setAccounts","setCategories","categories","handleClick","fetch","method","headers","then","response","json","data","Promise","all","r","banksData","accountsData","insightsData","console","log","catch","error","className","children","id","style","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","class","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Pages/TransactionsIndex.js"],"sourcesContent":["import React, {useContext} from 'react'\nimport '../App.css'\nimport TransactionIndexModule from '../Components/Transaction_Index_Module'\nimport AppContext from '../AppContext'\nimport { useParams } from 'react-router-dom'\n\nfunction Transactions() {\n\n  const { banks, setBanks, setLoading, setAccounts, setCategories, categories} = useContext(AppContext);\n      function handleClick() {\n        fetch('/api/transactionseed', {\n            method: 'POST',  // Use POST for creating data\n            headers: {\n                'Content-Type': 'application/json',  // Send request as JSON\n            },\n        })\n        .then(response => response.json())  // Wait for JSON response\n        .then(data => {\n          Promise.all([\n            fetch('/api/banks').then((r) => r.json()),\n            fetch('/api/account').then((r) => r.json()),\n            fetch('/api/insights').then((r) => r.json())\n          ]).then(([banksData, accountsData, insightsData]) => {\n            console.log(\"Existing categories\", categories)\n            setBanks(banksData);\n            setAccounts(accountsData)\n            setCategories(insightsData);\n            console.log(\"New categories\", categories)\n            setLoading(false);\n            console.log(\"From effect:\", accountsData)\n          }).catch(error => {\n            console.error('Error fetching data:', error);\n            setLoading(false);\n          });  // Handle the response\n        })\n        .catch(error => console.error('Error:', error));  // Handle any errors\n    }\n    \n    \n  return (\n    <div className='page_wrapper'>\n    <div className='background_wrapper' id='test' style={{width:\"800px\"}}>\n    <div className='_wrapper' style={{width:\"800px\"}} id='test'>\n      \n      <h2>Transactions</h2>\n      <TransactionIndexModule banks = {banks}/>\n      <div className='transactions_button_break'></div>\n      <button className='transactions_rng' onClick={handleClick}> {/*need to setup request response cycle in the app api*/ }\n      Generate Random Transactions \n            <span class=\"tooltiptext\">            \n            Click to Generate a random set of transactions\n            </span>\n        </button>\n        </div>\n    </div>\n  \n    </div>\n  )\n}\n\nexport default Transactions"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}