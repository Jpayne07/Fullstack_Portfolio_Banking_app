{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Components/EditableText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditableText({\n  initialText,\n  transactionId,\n  keyName\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false); // Track if editing mode is active\n  const [text, setText] = useState(initialText); // Store the text value\n\n  const handleTextClick = () => {\n    setIsEditing(true); // Switch to editing mode\n  };\n  const handleInputChange = e => {\n    setText(e.target.value); // Update the text state as the user types\n  };\n  const handleInputBlur = async () => {\n    setIsEditing(false); // Exit editing mode when the input loses focus\n    await saveTextToDatabase();\n  };\n  const handleKeyPress = async e => {\n    if (e.key === \"Enter\") {\n      setIsEditing(false); // Exit editing mode when Enter is pressed\n      await saveTextToDatabase();\n    }\n  };\n  const saveTextToDatabase = async () => {\n    setLoading(true);\n    setError(null);\n    const response = await fetch(`/api/transaction/${transactionId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        [keyName]: Date.parse(text)\n      })\n    }).then(r => {\n      if (!r.ok) {\n        r.json().then(data => {\n          console.log(data.error);\n          return data.error;\n        });\n      } else {\n        r.json().then(data => {\n          console.log(\"Changes saved:\", data);\n          return data;\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: handleInputChange,\n      onBlur: handleInputBlur,\n      onKeyPress: handleKeyPress,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: handleTextClick,\n      style: {\n        cursor: \"pointer\"\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(EditableText, \"VO7DSw6Y+S1O7ORLGVxqICQ7bbw=\");\n_c = EditableText;\nexport default EditableText;\nvar _c;\n$RefreshReg$(_c, \"EditableText\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EditableText","initialText","transactionId","keyName","_s","isEditing","setIsEditing","text","setText","handleTextClick","handleInputChange","e","target","value","handleInputBlur","saveTextToDatabase","handleKeyPress","key","setLoading","setError","response","fetch","method","headers","body","JSON","stringify","Date","parse","then","r","ok","json","data","console","log","error","children","type","onChange","onBlur","onKeyPress","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Components/EditableText.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction EditableText({ initialText, transactionId, keyName}) {\n    const [isEditing, setIsEditing] = useState(false); // Track if editing mode is active\n    const [text, setText] = useState(initialText); // Store the text value\n\n  const handleTextClick = () => {\n    setIsEditing(true); // Switch to editing mode\n  };\n\n  const handleInputChange = (e) => {\n    setText(e.target.value); // Update the text state as the user types\n  };\n\n  const handleInputBlur = async () => {\n    setIsEditing(false); // Exit editing mode when the input loses focus\n    await saveTextToDatabase();\n  };\n\n  const handleKeyPress = async (e) => {\n    if (e.key === \"Enter\") {\n      setIsEditing(false); // Exit editing mode when Enter is pressed\n      await saveTextToDatabase();\n    }\n  };\n\n  const saveTextToDatabase = async () => {\n    setLoading(true);\n    setError(null);\n\n   \n      const response = await fetch(`/api/transaction/${transactionId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ [keyName]: Date.parse(text) }),\n      })\n      .then((r) => {\n      if (!r.ok) {\n        r.json()\n        .then((data)=>{\n          console.log(data.error)\n          return data.error\n        })\n        \n      }\n\n      else{\n        r.json()\n        .then((data)=>{\n          console.log(\"Changes saved:\", data);\n        return data\n      })\n      }\n    \n    })\n      \n  };\n\n  return (\n    <div>\n      {isEditing ? (\n        <input\n          type=\"text\"\n          value={text}\n          onChange={handleInputChange}\n          onBlur={handleInputBlur}\n          onKeyPress={handleKeyPress}\n          autoFocus\n        />\n      ) : (\n        <span onClick={handleTextClick} style={{ cursor: \"pointer\" }}>\n          {text}\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default EditableText;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}