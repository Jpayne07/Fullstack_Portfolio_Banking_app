{"ast":null,"code":"import React,{useContext}from'react';import AppContext from'../AppContext';import{useParams}from'react-router-dom';import Pencil from'../images/Pencil.svg';import EditableText from'./EditableText';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Transaction_Id_module(){const{user}=useContext(AppContext);const{id}=useParams();const uniqueDateSet=new Set();// const transactionList = user.map(user=>{\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"bank_account_container\",children:user.accounts.filter(account=>account.transactions.some(transaction=>transaction.id===Number(id))).map(account=>{return/*#__PURE__*/_jsxs(\"div\",{style:{width:\"100%\"},children:[/*#__PURE__*/_jsx(\"h1\",{style:{padding:\"15px 0\",textAlign:\"left\"},children:\"\".concat(account.bank.name,\": \").concat(account.account_type)}),/*#__PURE__*/_jsxs(\"div\",{className:\"transaction_headers\",id:\"singular\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"ACCT#\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"Amount\"})]}),account.transactions.filter(transaction=>transaction.id===Number(id)).map(transaction=>{// date below\nconst date=new Date(transaction.created_at).toLocaleDateString('en-US',{day:'2-digit',month:'2-digit',year:'numeric'});const shouldRenderDate=uniqueDateSet.has(date);uniqueDateSet.add(date);return/*#__PURE__*/_jsxs(\"div\",{className:\"transaction_rows\",id:\"singular\",children:[/*#__PURE__*/_jsx(EditableText,{initialText:transaction.title,transactionId:id,keyName:'title'}),/*#__PURE__*/_jsx(EditableText,{initialText:date,transactionId:id,keyName:'created_at'}),/*#__PURE__*/_jsx(\"p\",{children:transaction.id}),/*#__PURE__*/_jsx(\"p\",{children:transaction.card.card_number.toString().slice(-4)}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",alignItems:\"center\"},children:[/*#__PURE__*/_jsx(\"span\",{style:{marginRight:\"4px\"},children:\"$\"}),/*#__PURE__*/_jsx(EditableText,{initialText:transaction.amount,transactionId:id,keyName:'amount'})]})]},transaction.id);})]});})});}export default Transaction_Id_module;","map":{"version":3,"names":["React","useContext","AppContext","useParams","Pencil","EditableText","jsx","_jsx","jsxs","_jsxs","Transaction_Id_module","user","id","uniqueDateSet","Set","className","children","accounts","filter","account","transactions","some","transaction","Number","map","style","width","padding","textAlign","concat","bank","name","account_type","date","Date","created_at","toLocaleDateString","day","month","year","shouldRenderDate","has","add","initialText","title","transactionId","keyName","card","card_number","toString","slice","display","alignItems","marginRight","amount"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Components/Transaction_Id_module.js"],"sourcesContent":["import React, {useContext} from 'react'\nimport AppContext from '../AppContext';\n\nimport { useParams } from 'react-router-dom';\nimport Pencil from '../images/Pencil.svg'\nimport EditableText from './EditableText';\n\n\nfunction Transaction_Id_module() {\n  const { user} = useContext(AppContext)\n  const { id } = useParams()\n  const uniqueDateSet = new Set();\n    // const transactionList = user.map(user=>{\n      return <div className='bank_account_container'>\n       \n        {user.accounts\n        .filter((account) => account.transactions.some((transaction) => transaction.id === Number(id))\n      )\n        .map(account=>{\n          return <div style={{width:\"100%\"}}>\n            <h1 style={{padding:\"15px 0\", textAlign:\"left\"}}>{`${account.bank.name}: ${account.account_type}`}</h1>\n            <div className=\"transaction_headers\" id='singular'>\n            <h4>Description</h4>\n                  <h4>Date</h4>\n                  <h4>ID</h4>\n                  <h4>ACCT#</h4>\n                  <h4>Amount</h4>\n            </div>\n            {account.transactions.filter(transaction =>transaction.id === Number(id))\n            .map((transaction) => {\n              // date below\n              const date = new Date(transaction.created_at).toLocaleDateString('en-US', {\n                day: '2-digit',\n                month: '2-digit',\n                year: 'numeric',\n              }\n            )\n          const shouldRenderDate = uniqueDateSet.has(date);\n          uniqueDateSet.add(date)\n          \n            return(\n              \n            <div className='transaction_rows' key={transaction.id} id=\"singular\">\n                 {/* <p className=\"time\">\n                   {shouldRenderDate?null:date}\n                </p> */}\n                <EditableText initialText={transaction.title} transactionId={id}  keyName={'title'}/>\n                <EditableText initialText={date} transactionId={id}  keyName={'created_at'}/>\n                <p>{transaction.id}</p>\n                <p>{transaction.card.card_number.toString().slice(-4)}</p>\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <span style={{ marginRight: \"4px\" }}>$</span>\n                <EditableText initialText={transaction.amount} transactionId={id} keyName={'amount'} />\n                </div>                \n                        </div>\n                        )\n                    }\n                  )}\n\n                </div>\n  }\n)\n}\n</div>\n\n}\n\nexport default Transaction_Id_module"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}