{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(undefined);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [errors, setErrors] = useState([]);\n  const [banks, setBanks] = useState([]);\n  useEffect(() => {\n    fetch('/api/insights').then(r => r.json()).then(insightsData => {\n      setCategories(insightsData);\n    }).catch(error => {\n      console.log(\"error in insights\");\n      setLoading(false);\n    });\n  }, [user]);\n  useEffect(() => {\n    fetch('/api/banks').then(r => r.json()).then(banks => {\n      setBanks(banks);\n    }).catch(error => {\n      console.log(\"error in insights\");\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    console.log('now checking session, Loading:', loading);\n    setLoading(true);\n    fetch(\"/api/check_session\").then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(user => {\n      setUser(user);\n    }).catch(error => {\n      console.error(\"Error fetching session:\", error);\n      // Optionally set an error state here\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  function handleLogin(username, password, setSubmitting, navigate) {\n    fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(user => {\n          setUser(user);\n          navigate('/');\n        });\n      } else {\n        r.json().then(err => {\n          setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n        });\n      }\n    }).catch(err => {\n      setErrors([err.message || \"Network error. Please try again later.\"]);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  }\n  function handleLoginv2(username, password, navigate) {\n    console.log(navigate);\n    fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(user => {\n          setUser(user);\n          navigate('/');\n        });\n      } else {\n        r.json().then(err => {\n          setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n        });\n      }\n    }).catch(err => {\n      setErrors([err.message || \"Network error. Please try again later.\"]);\n    });\n    // .finally(()=>{\n    //   setSubmitting(false)\n    // })\n  }\n  function handleTransactionSeed() {\n    fetch('/api/transactionseed', {\n      method: 'POST',\n      // Use POST for creating data\n      headers: {\n        'Content-Type': 'application/json' // Send request as JSON\n      }\n    }).then(response => response.json()).then(document.location.reload()).catch(error => console.error('Error:', error)); // Handle any errors\n  }\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      banks,\n      categories,\n      user,\n      setUser,\n      setLoading,\n      setCategories,\n      handleLogin,\n      errors,\n      handleTransactionSeed,\n      handleLoginv2\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"A5/zpsKS1+k/S3QP/nWjpEM2sjQ=\");\n_c = AppProvider;\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","user","setUser","undefined","categories","setCategories","loading","setLoading","errors","setErrors","banks","setBanks","fetch","then","r","json","insightsData","catch","error","console","log","response","ok","Error","finally","handleLogin","username","password","setSubmitting","navigate","method","headers","body","JSON","stringify","err","message","handleLoginv2","handleTransactionSeed","document","location","reload","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nconst AppContext = createContext();\n\n\nexport const AppProvider = ({ children }) => {\n  const [user, setUser] = useState(undefined);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [errors, setErrors] = useState([]);\n  const [banks, setBanks] = useState([])\n\n  useEffect(() => {\n      fetch('/api/insights')\n      .then((r) => r.json())\n      .then(insightsData => {\n      setCategories(insightsData);\n    }).catch(error => {\n      console.log(\"error in insights\")\n      setLoading(false);\n      \n    });\n  }, [user]);\n  useEffect(() => {\n    fetch('/api/banks')\n    .then((r) => r.json())\n    .then(banks => {\n      setBanks(banks);\n  }).catch(error => {\n    console.log(\"error in insights\")\n    setLoading(false);\n    \n  });\n}, []);\n\n  useEffect(() => {\n    console.log('now checking session, Loading:',loading)\n    setLoading(true);\n    fetch(\"/api/check_session\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((user) => {\n        setUser(user);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching session:\", error);\n        // Optionally set an error state here\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  function handleLogin(username, password, setSubmitting, navigate) {\n    \n    fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((user) => {\n            setUser(user);\n            navigate('/')\n          });\n        } else {\n          r.json().then((err) => {\n            setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n          });\n        }\n      })\n      .catch((err) => {\n        setErrors([err.message || \"Network error. Please try again later.\"]);\n      })\n      .finally(()=>{\n        setSubmitting(false)\n      })\n      \n  }\n\n  function handleLoginv2(username, password, navigate) {\n    console.log(navigate)\n    fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((user) => {\n            setUser(user);\n            navigate('/')\n          });\n        } else {\n          r.json().then((err) => {\n            setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n          });\n        }\n      })\n      .catch((err) => {\n        setErrors([err.message || \"Network error. Please try again later.\"]);\n      })\n      // .finally(()=>{\n      //   setSubmitting(false)\n      // })\n      \n  }\n  function handleTransactionSeed() {\n    fetch('/api/transactionseed', {\n        method: 'POST',  // Use POST for creating data\n        headers: {\n            'Content-Type': 'application/json',  // Send request as JSON\n        },\n    })\n    .then(response => response.json())\n    .then(document.location.reload())\n    .catch(error => console.error('Error:', error));  // Handle any errors\n}\n  \n      \n\n  return (\n    <AppContext.Provider value={{loading, banks, categories, user, setUser, setLoading, setCategories, handleLogin, errors, handleTransactionSeed, handleLoginv2 }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}