{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(undefined);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    Promise.all([fetch('/api/insights').then(r => r.json())]).then(insightsData => {\n      setCategories(insightsData);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      banks,\n      categories,\n      user,\n      setUser,\n      setLoading,\n      setCategories\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"vSCzqeMWiaJnsI/mk5K+gcMvfZ0=\");\n_c = AppProvider;\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","user","setUser","undefined","categories","setCategories","loading","setLoading","Promise","all","fetch","then","r","json","insightsData","catch","error","console","Provider","value","banks","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nconst AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n  const [user, setUser] = useState(undefined);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n\n\n  \n  useEffect(() => {\n    setLoading(true);\n    Promise.all([\n      fetch('/api/insights').then((r) => r.json())\n    ]).then(insightsData => {\n      setCategories(insightsData);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setLoading(false);\n    });\n  }, []);\n\n\n\n\n  return (\n    <AppContext.Provider value={{loading, banks, categories, user, setUser, setLoading, setCategories }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,UAAU,gBAAGL,aAAa,CAAC,CAAC;AAElC,OAAO,MAAMM,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACU,SAAS,CAAC;EAC3C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAK5CC,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,IAAI,CAAC;IAChBC,OAAO,CAACC,GAAG,CAAC,CACVC,KAAK,CAAC,eAAe,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAC7C,CAAC,CAACF,IAAI,CAACG,YAAY,IAAI;MACtBT,aAAa,CAACS,YAAY,CAAC;MAC3BP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CAACQ,KAAK,CAACC,KAAK,IAAI;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CT,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAKN,oBACEX,OAAA,CAACC,UAAU,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAACb,OAAO;MAAEc,KAAK;MAAEhB,UAAU;MAAEH,IAAI;MAAEC,OAAO;MAAEK,UAAU;MAAEF;IAAc,CAAE;IAAAN,QAAA,EACjGA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACxB,EAAA,CA7BWF,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AA+BxB,eAAeD,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}