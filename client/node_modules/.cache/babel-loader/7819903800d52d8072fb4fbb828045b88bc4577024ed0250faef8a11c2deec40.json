{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import AddNewAccountForm from'../Components/AddNewAccountForm';import'../Styling/App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AddNewAccount(){const navigate=useNavigate();const[errorState,setErrorState]=useState(false);function handleNewAccountSubmission(bank_name,account_value,account_type,setSubmitting){fetch(\"/api/account\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({bank_name,account_value,account_type})}).then(r=>{if(r.ok){navigate('/accounts').then(document.location.reload());}else{console.log(\"Something went wrong\");setSubmitting(false);setErrorState(true);}});}return/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"login_wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"background_wrapper\",id:\"login\",style:{width:\"1200px\",maxWidth:\"600px\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"_wrapper\",id:\"login\",style:{width:\"1200px\",maxWidth:\"600px\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"login_content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login_header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create New Bank Account\"}),errorState?/*#__PURE__*/_jsx(\"p\",{children:\"Invalid account information. Bank name must be less than 30 characters and account value must be positive.\"}):null]}),/*#__PURE__*/_jsx(AddNewAccountForm,{handleNewAccountSubmission:handleNewAccountSubmission})]})})})})});}export default AddNewAccount;","map":{"version":3,"names":["React","useState","useNavigate","AddNewAccountForm","jsx","_jsx","jsxs","_jsxs","AddNewAccount","navigate","errorState","setErrorState","handleNewAccountSubmission","bank_name","account_value","account_type","setSubmitting","fetch","method","headers","body","JSON","stringify","then","r","ok","document","location","reload","console","log","children","className","id","style","width","maxWidth"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Pages/AddNewAccount.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport AddNewAccountForm from '../Components/AddNewAccountForm';\nimport '../Styling/App.css'\n\nfunction AddNewAccount() {\n    const navigate = useNavigate();\n    const [errorState, setErrorState] = useState(false)\n    function handleNewAccountSubmission(bank_name, account_value, account_type, setSubmitting) {\n        fetch(\"/api/account\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({bank_name, account_value, account_type}),\n        })\n        .then((r) => {\n          if (r.ok) {\n            navigate('/accounts')\n            .then(document.location.reload())\n          \n          }\n          else {\n            console.log(\"Something went wrong\")\n            setSubmitting(false)\n            setErrorState(true)\n            \n          }})\n          \n      }\n\n\n  return (\n    <main>\n        <div className='login_wrapper'>\n          <div className='background_wrapper' id='login'style = {{width:\"1200px\", maxWidth:\"600px\"}}>\n            <div className='_wrapper' id='login' style = {{width:\"1200px\", maxWidth:\"600px\"}}> \n              <div className='login_content'>\n                <div className='login_header'><h2>Create New Bank Account</h2>\n                  {errorState?<p>Invalid account information. Bank name must be less than 30 characters and account value must be positive.</p>:null}\n                </div>\n                <AddNewAccountForm handleNewAccountSubmission={handleNewAccountSubmission}/>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n    \n    </main>\n  )\n}\n\nexport default AddNewAccount"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,iBAAiB,KAAM,iCAAiC,CAC/D,MAAO,oBAAoB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3B,QAAS,CAAAC,aAAaA,CAAA,CAAG,CACrB,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACQ,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CACnD,QAAS,CAAAW,0BAA0BA,CAACC,SAAS,CAAEC,aAAa,CAAEC,YAAY,CAAEC,aAAa,CAAE,CACvFC,KAAK,CAAC,cAAc,CAAE,CACpBC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACT,SAAS,CAAEC,aAAa,CAAEC,YAAY,CAAC,CAC/D,CAAC,CAAC,CACDQ,IAAI,CAAEC,CAAC,EAAK,CACX,GAAIA,CAAC,CAACC,EAAE,CAAE,CACRhB,QAAQ,CAAC,WAAW,CAAC,CACpBc,IAAI,CAACG,QAAQ,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAEnC,CAAC,IACI,CACHC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACnCd,aAAa,CAAC,KAAK,CAAC,CACpBL,aAAa,CAAC,IAAI,CAAC,CAErB,CAAC,CAAC,CAAC,CAEP,CAGJ,mBACEN,IAAA,SAAA0B,QAAA,cACI1B,IAAA,QAAK2B,SAAS,CAAC,eAAe,CAAAD,QAAA,cAC5B1B,IAAA,QAAK2B,SAAS,CAAC,oBAAoB,CAACC,EAAE,CAAC,OAAO,CAAAC,KAAK,CAAI,CAACC,KAAK,CAAC,QAAQ,CAAEC,QAAQ,CAAC,OAAO,CAAE,CAAAL,QAAA,cACxF1B,IAAA,QAAK2B,SAAS,CAAC,UAAU,CAACC,EAAE,CAAC,OAAO,CAACC,KAAK,CAAI,CAACC,KAAK,CAAC,QAAQ,CAAEC,QAAQ,CAAC,OAAO,CAAE,CAAAL,QAAA,cAC/ExB,KAAA,QAAKyB,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC5BxB,KAAA,QAAKyB,SAAS,CAAC,cAAc,CAAAD,QAAA,eAAC1B,IAAA,OAAA0B,QAAA,CAAI,yBAAuB,CAAI,CAAC,CAC3DrB,UAAU,cAACL,IAAA,MAAA0B,QAAA,CAAG,4GAA0G,CAAG,CAAC,CAAC,IAAI,EAC/H,CAAC,cACN1B,IAAA,CAACF,iBAAiB,EAACS,0BAA0B,CAAEA,0BAA2B,CAAC,CAAC,EACzE,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAAC,CAGJ,CAAC,CAEX,CAEA,cAAe,CAAAJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}