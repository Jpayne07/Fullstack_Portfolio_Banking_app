{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Components/InsightsCharts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AppContext from '../AppContext';\nimport { useContext } from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InsightsCharts() {\n  _s();\n  const [hovered, setHovered] = useState(null);\n  const {\n    categories\n  } = useContext(AppContext);\n  const colors = [\"#2BFF5C\",\n  // Base Bright Green\n  \"#1EAA46\",\n  // Darker Green for Depth\n  \"#FF5733\",\n  // Bold Reddish-Orange (High Contrast)\n  \"#FFC300\",\n  // Bright Yellow (Vibrant)\n  \"#335CFF\",\n  // Deep Blue (Strong Contrast)\n  \"#2A2A2A\",\n  // Charcoal Gray (Dark, Sleek)\n  \"#F5F5F5\",\n  // Soft Off-White (Clean Design)\n  \"#FF69B4\",\n  // Vibrant Pink (Energetic)\n  \"#8A2BE2\" // Rich Purple (Sophisticated Touch)\n  ];\n  const arrofObjects = Object.entries(categories).map(([key, value], index) => ({\n    title: key,\n    value: value,\n    color: colors[index % colors.length]\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n      data: data,\n      lineWidth: 30 // Thicker line for a more donut-like shape\n      ,\n      paddingAngle: 2 // Adds some spacing between segments\n      ,\n      rounded: true // Optional: makes segments rounded\n      ,\n      segmentsStyle: {\n        transition: 'stroke .3s',\n        cursor: 'pointer'\n      },\n      segmentsShift: 1 // Slight \"shift\" of segments for visual separation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center',\n        pointerEvents: 'none' // so hover events pass through to the chart\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 11\n  }, this);\n}\n_s(InsightsCharts, \"Ri7uujrbIEdVc5p+8RHtSObQW8Q=\");\n_c = InsightsCharts;\nexport default InsightsCharts;\nvar _c;\n$RefreshReg$(_c, \"InsightsCharts\");","map":{"version":3,"names":["React","useState","AppContext","useContext","PieChart","jsxDEV","_jsxDEV","InsightsCharts","_s","hovered","setHovered","categories","colors","arrofObjects","Object","entries","map","key","value","index","title","color","length","children","fileName","_jsxFileName","lineNumber","columnNumber","data","lineWidth","paddingAngle","rounded","segmentsStyle","transition","cursor","segmentsShift","style","position","top","left","transform","textAlign","pointerEvents","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Components/InsightsCharts.js"],"sourcesContent":["import React, {useState} from 'react'\nimport AppContext from '../AppContext'\nimport { useContext } from 'react'\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\n\nfunction InsightsCharts() {\n  const [hovered, setHovered] = useState(null);\n    const {categories} = useContext(AppContext)\n    const colors = [\n      \"#2BFF5C\", // Base Bright Green\n      \"#1EAA46\", // Darker Green for Depth\n      \"#FF5733\", // Bold Reddish-Orange (High Contrast)\n      \"#FFC300\", // Bright Yellow (Vibrant)\n      \"#335CFF\", // Deep Blue (Strong Contrast)\n      \"#2A2A2A\", // Charcoal Gray (Dark, Sleek)\n      \"#F5F5F5\", // Soft Off-White (Clean Design)\n      \"#FF69B4\", // Vibrant Pink (Energetic)\n      \"#8A2BE2\"  // Rich Purple (Sophisticated Touch)\n    ];\n    const arrofObjects = Object.entries(categories).map(([key, value],index) => ({\n      title: key,\n      value: value,\n      color: colors[index % colors.length]\n  }));\n\n  return (<div>\n    <h2>Spending</h2>\n    {/* <PieChart\n    data={arrofObjects}\n    // background={color}\n    label={({ dataEntry }) => (hovered === dataEntry.title ? `${dataEntry.title}: ${dataEntry.value}` : dataEntry.value)}\n            onMouseOver={(_, index) => setHovered(arrofObjects[index].title)}\n            onMouseOut={() => setHovered(null)}\n            labelStyle={{\n              fontSize: \"3px\",\n              fill: \"#fff\",\n              fontWeight: \"bold\",\n            }}\n            radius={42}\n            paddingAngle={5}\n            animate\n            \n            labelPosition={75} // Adjusts label position\n    /> */}\n    <PieChart\n        data={data}\n        lineWidth={30}          // Thicker line for a more donut-like shape\n        paddingAngle={2}        // Adds some spacing between segments\n        rounded                 // Optional: makes segments rounded\n        segmentsStyle={{ transition: 'stroke .3s', cursor: 'pointer' }}\n        segmentsShift={1}       // Slight \"shift\" of segments for visual separation\n      />\n\n      {/* Center label (icon + amount) */}\n      <div\n        style={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          textAlign: 'center',\n          pointerEvents: 'none', // so hover events pass through to the chart\n        }}\n      ></div>\n</div>\n  )\n}\n\nexport default InsightsCharts"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,UAAU,MAAM,eAAe;AACtC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,QAAQ,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM;IAACU;EAAU,CAAC,GAAGR,UAAU,CAACD,UAAU,CAAC;EAC3C,MAAMU,MAAM,GAAG,CACb,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS,CAAE;EAAA,CACZ;EACD,MAAMC,YAAY,GAAGC,MAAM,CAACC,OAAO,CAACJ,UAAU,CAAC,CAACK,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,EAACC,KAAK,MAAM;IAC3EC,KAAK,EAAEH,GAAG;IACVC,KAAK,EAAEA,KAAK;IACZG,KAAK,EAAET,MAAM,CAACO,KAAK,GAAGP,MAAM,CAACU,MAAM;EACvC,CAAC,CAAC,CAAC;EAEH,oBAAQhB,OAAA;IAAAiB,QAAA,gBACNjB,OAAA;MAAAiB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAkBjBrB,OAAA,CAACF,QAAQ;MACLwB,IAAI,EAAEA,IAAK;MACXC,SAAS,EAAE,EAAG,CAAU;MAAA;MACxBC,YAAY,EAAE,CAAE,CAAQ;MAAA;MACxBC,OAAO,OAAiB;MAAA;MACxBC,aAAa,EAAE;QAAEC,UAAU,EAAE,YAAY;QAAEC,MAAM,EAAE;MAAU,CAAE;MAC/DC,aAAa,EAAE,CAAE,CAAO;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAGFrB,OAAA;MACE8B,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE,uBAAuB;QAClCC,SAAS,EAAE,QAAQ;QACnBC,aAAa,EAAE,MAAM,CAAE;MACzB;IAAE;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEN;AAACnB,EAAA,CA7DQD,cAAc;AAAAoC,EAAA,GAAdpC,cAAc;AA+DvB,eAAeA,cAAc;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}