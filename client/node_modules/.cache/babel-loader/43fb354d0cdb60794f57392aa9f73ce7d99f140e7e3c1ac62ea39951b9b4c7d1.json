{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Components/AddNewAccountForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport AppContext from '../AppContext';\nimport { useNavigate } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddNewAccountForm() {\n  _s();\n  const [holdSuggest, setHoldSuggest] = useState('');\n  const {\n    banks,\n    handleNewAccountSubmission\n  } = useContext(AppContext);\n  const navigate = useNavigate();\n  const bank_names = banks.filter(bank => {\n    return bank.name.toLowerCase().includes(holdSuggest.toLowerCase());\n  });\n  const FormSchema = yup.object().shape({\n    account_value: yup.number().min(1, 'Account value must be at least 1 characters long'),\n    bank_name: yup.string().min(5, 'bank must be 5 characters long').matches(/[a-z]/, 'username requires a lowercase letter').matches(/[A-Z]/, 'username requires an uppercase letter'),\n    account_type: yup.string().matches(/^(Checking|Savings)$/, \"Account type should be 'Checking' or 'Savings'\")\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      bank_name: '',\n      account_value: 0,\n      account_type: ''\n    },\n    validationSchema: FormSchema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      handleNewAccountSubmission(values.bank_name, values.account_value, values.account_type, setSubmitting, navigate);\n    },\n    children: ({\n      isSubmitting,\n      errors,\n      handleChange\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      className: \"login_form_body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formik_labels\",\n            id: \"accountAdd\",\n            children: \"Bank Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: \"input\",\n            type: \"text\",\n            name: \"bank_name\",\n            className: \"formik_fields\",\n            list: \"bankList\",\n            onChange: e => {\n              handleChange(e);\n              setHoldSuggest(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"bankList\",\n            children: bank_names.map((bank, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: bank.name\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), errors.bank_name && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.bank_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formik_labels\",\n            id: \"accountAdd\",\n            children: \"Account Value: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"account_value\",\n            className: \"formik_fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), errors.account_value && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.account_value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formik_labels\",\n            id: \"accountAdd\",\n            children: \"Account Type: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"account_type\",\n            className: \"formik_fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), errors.account_type && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.account_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_row\",\n        style: {\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          id: \"login_button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(AddNewAccountForm, \"PhIWocG28Kw4yb4UZA6OgOEI1uc=\", false, function () {\n  return [useNavigate];\n});\n_c = AddNewAccountForm;\nexport default AddNewAccountForm;\nvar _c;\n$RefreshReg$(_c, \"AddNewAccountForm\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Formik","Form","Field","AppContext","useNavigate","yup","jsxDEV","_jsxDEV","AddNewAccountForm","_s","holdSuggest","setHoldSuggest","banks","handleNewAccountSubmission","navigate","bank_names","filter","bank","name","toLowerCase","includes","FormSchema","object","shape","account_value","number","min","bank_name","string","matches","account_type","initialValues","validationSchema","onSubmit","values","setSubmitting","children","isSubmitting","errors","handleChange","className","id","fileName","_jsxFileName","lineNumber","columnNumber","as","type","list","onChange","e","target","value","map","key","style","justifyContent","disabled","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Components/AddNewAccountForm.js"],"sourcesContent":["import React, { useState, useContext, useEffect} from 'react'\nimport { Formik, Form, Field} from 'formik';\nimport AppContext from '../AppContext';\nimport { useNavigate } from 'react-router-dom';\n\nimport * as yup from 'yup';\n\n\n\nfunction AddNewAccountForm() {\n    const [holdSuggest, setHoldSuggest] = useState('')\n    const { banks, handleNewAccountSubmission} = useContext(AppContext)\n    const navigate = useNavigate()\n    const bank_names = banks.filter(bank=>{\n        return bank.name.toLowerCase().includes(holdSuggest.toLowerCase())\n    })\n\n    const FormSchema = yup.object().shape({\n        account_value: yup\n            .number()\n            .min(1, 'Account value must be at least 1 characters long'),\n        bank_name: yup\n            .string()\n            .min(5, 'bank must be 5 characters long')\n            .matches(/[a-z]/, 'username requires a lowercase letter')\n            .matches(/[A-Z]/, 'username requires an uppercase letter'),\n        account_type: yup\n            .string()\n            .matches(/^(Checking|Savings)$/, \"Account type should be 'Checking' or 'Savings'\")\n\n        });\n\n  return (\n    <Formik\n    initialValues={{ bank_name: '', account_value: 0, account_type: '' }}\n    validationSchema={FormSchema}\n    onSubmit={(values, { setSubmitting }) => {\n        handleNewAccountSubmission(values.bank_name, values.account_value, values.account_type, setSubmitting, navigate)\n        \n    }}\n>   \n    {({ isSubmitting, errors, handleChange }) => (\n      \n    <Form className='login_form_body'>\n        \n        {/* <div className='form_row'> */}\n        <div className='form_fields'>\n            <div className='form_row'>\n                <label className=\"formik_labels\" id = \"accountAdd\">Bank Name: </label>\n                <Field\n                as=\"input\"\n                type=\"text\" \n                name=\"bank_name\" \n                className=\"formik_fields\" \n                list=\"bankList\"\n                onChange={(e)=>{\n                  handleChange(e)\n                  setHoldSuggest(e.target.value)}}\n                  />\n                \n                <datalist id=\"bankList\">\n                {bank_names.map((bank, key) =>\n                  <option key={key} value={bank.name} />\n                )}\n                </datalist>\n                {errors.bank_name && <p>{errors.bank_name}</p>}\n            </div>\n            <div className='form_row'>\n                <label className=\"formik_labels\" id = \"accountAdd\">Account Value: </label>\n                <Field type=\"text\" name=\"account_value\" className=\"formik_fields\"/>\n                {errors.account_value && <p>{errors.account_value}</p>}\n            </div>\n            <div className='form_row'>\n                <label className=\"formik_labels\" id = \"accountAdd\">Account Type: </label>\n                <Field type=\"text\" name=\"account_type\" className=\"formik_fields\"/>\n                {errors.account_type && <p>{errors.account_type}</p>}\n            </div>\n          </div>\n        \n        \n        <div className='form_row' style={{justifyContent:\"center\"}}>\n        <button type=\"submit\" disabled={isSubmitting} id='login_button'>\n        Submit\n        </button>\n      \n        </div>\n    </Form>\n    )}\n</Formik>\n  )\n}\n\nexport default AddNewAccountForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}