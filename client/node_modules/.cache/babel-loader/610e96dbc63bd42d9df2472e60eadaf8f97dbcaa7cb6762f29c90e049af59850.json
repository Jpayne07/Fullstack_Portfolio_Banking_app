{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Components/InsightsCharts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AppContext from '../AppContext';\nimport { useContext } from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InsightsCharts() {\n  _s();\n  const [hovered, setHovered] = useState(null);\n  const {\n    categories\n  } = useContext(AppContext);\n  const colors = ['#E38627', '#C13C37', '#6A2135', '#8A2BE2', '#2E8B57'];\n  const arrofObjects = Object.entries(categories).map(([key, value], index) => ({\n    title: key,\n    value: value,\n    color: colors[index % colors.length]\n  }));\n  console.log('Chart Data:', arrofObjects);\n\n  //   return <div style={{width:\"100%\"}}key={key} >\n\n  //         <div className='transaction_rows'  style={{gridTemplateColumns: \"3fr 2fr\"}}>\n  //         <p id='transaction_name'>{key}</p>\n  //         <p id='Price'><span id='DollaBill'>$ </span>{value}</p>\n\n  //         </div>\n  // </div>\n\n  return /*#__PURE__*/_jsxDEV(PieChart, {\n    data: arrofObjects\n    // background={color}\n    ,\n    label: ({\n      dataEntry\n    }) => hovered === dataEntry.title ? `${dataEntry.title}: ${dataEntry.value}` : dataEntry.value,\n    onMouseOver: (_, index) => setHovered(arrofObjects[index].title),\n    onMouseOut: () => setHovered(null),\n    labelStyle: {\n      fontSize: '5px',\n      fontWeight: 'bold',\n      fill: 'white'\n    },\n    style: {\n      height: '300px'\n    },\n    segmentsShift: index => index === 0 ? 7 : 2,\n    labelPosition: 80 // Adjusts label position\n    //   segmentsStyle={{\n    //     stroke: '#fff', // White border\n    //     strokeWidth: 2, // Border thickness\n    // }}\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(InsightsCharts, \"Ri7uujrbIEdVc5p+8RHtSObQW8Q=\");\n_c = InsightsCharts;\nexport default InsightsCharts;\nvar _c;\n$RefreshReg$(_c, \"InsightsCharts\");","map":{"version":3,"names":["React","useState","AppContext","useContext","PieChart","jsxDEV","_jsxDEV","InsightsCharts","_s","hovered","setHovered","categories","colors","arrofObjects","Object","entries","map","key","value","index","title","color","length","console","log","data","label","dataEntry","onMouseOver","_","onMouseOut","labelStyle","fontSize","fontWeight","fill","style","height","segmentsShift","labelPosition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Components/InsightsCharts.js"],"sourcesContent":["import React, {useState} from 'react'\nimport AppContext from '../AppContext'\nimport { useContext } from 'react'\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\n\nfunction InsightsCharts() {\n  const [hovered, setHovered] = useState(null);\n    const {categories} = useContext(AppContext)\n    const colors = ['#E38627', '#C13C37', '#6A2135', '#8A2BE2', '#2E8B57']; \n    const arrofObjects = Object.entries(categories).map(([key, value],index) => ({\n      title: key,\n      value: value,\n      color: colors[index % colors.length]\n  }));\n\n  console.log('Chart Data:', arrofObjects);\n\n        \n      //   return <div style={{width:\"100%\"}}key={key} >\n          \n      //         <div className='transaction_rows'  style={{gridTemplateColumns: \"3fr 2fr\"}}>\n      //         <p id='transaction_name'>{key}</p>\n      //         <p id='Price'><span id='DollaBill'>$ </span>{value}</p>\n              \n      //         </div>\n      // </div>\n  \n    \n  return (\n    <PieChart\n    data={arrofObjects}\n    // background={color}\n    label={({ dataEntry }) => (hovered === dataEntry.title ? `${dataEntry.title}: ${dataEntry.value}` : dataEntry.value)}\n            onMouseOver={(_, index) => setHovered(arrofObjects[index].title)}\n            onMouseOut={() => setHovered(null)}\n            labelStyle={{ fontSize: '5px', fontWeight: 'bold', fill: 'white' }}\n            style={{ height: '300px' }}\n            \n            segmentsShift={(index) => (index === 0 ? 7 : 2)}\n    labelPosition={80} // Adjusts label position\n  //   segmentsStyle={{\n  //     stroke: '#fff', // White border\n  //     strokeWidth: 2, // Border thickness\n  // }}\n\n/>\n  )\n}\n\nexport default InsightsCharts"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,UAAU,MAAM,eAAe;AACtC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,QAAQ,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM;IAACU;EAAU,CAAC,GAAGR,UAAU,CAACD,UAAU,CAAC;EAC3C,MAAMU,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EACtE,MAAMC,YAAY,GAAGC,MAAM,CAACC,OAAO,CAACJ,UAAU,CAAC,CAACK,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,EAACC,KAAK,MAAM;IAC3EC,KAAK,EAAEH,GAAG;IACVC,KAAK,EAAEA,KAAK;IACZG,KAAK,EAAET,MAAM,CAACO,KAAK,GAAGP,MAAM,CAACU,MAAM;EACvC,CAAC,CAAC,CAAC;EAEHC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEX,YAAY,CAAC;;EAGpC;;EAEA;EACA;EACA;;EAEA;EACA;;EAGJ,oBACEP,OAAA,CAACF,QAAQ;IACTqB,IAAI,EAAEZ;IACN;IAAA;IACAa,KAAK,EAAEA,CAAC;MAAEC;IAAU,CAAC,KAAMlB,OAAO,KAAKkB,SAAS,CAACP,KAAK,GAAG,GAAGO,SAAS,CAACP,KAAK,KAAKO,SAAS,CAACT,KAAK,EAAE,GAAGS,SAAS,CAACT,KAAO;IAC7GU,WAAW,EAAEA,CAACC,CAAC,EAAEV,KAAK,KAAKT,UAAU,CAACG,YAAY,CAACM,KAAK,CAAC,CAACC,KAAK,CAAE;IACjEU,UAAU,EAAEA,CAAA,KAAMpB,UAAU,CAAC,IAAI,CAAE;IACnCqB,UAAU,EAAE;MAAEC,QAAQ,EAAE,KAAK;MAAEC,UAAU,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAQ,CAAE;IACnEC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAE3BC,aAAa,EAAGlB,KAAK,IAAMA,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,CAAG;IACxDmB,aAAa,EAAE,EAAG,CAAC;IACrB;IACA;IACA;IACA;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEF;AAAClC,EAAA,CA1CQD,cAAc;AAAAoC,EAAA,GAAdpC,cAAc;AA4CvB,eAAeA,cAAc;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}