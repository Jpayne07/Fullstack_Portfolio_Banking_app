{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Components/BankComponentv2.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport AppContext from '../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BanksComponentv2({\n  stylingContext\n}) {\n  _s();\n  const {\n    banks,\n    loading,\n    accounts\n  } = useContext(AppContext);\n  console.log(accounts);\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    // These options can be used to round to whole numbers.\n    trailingZeroDisplay: 'stripIfInteger'\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  //   const bankElement = banks.length > 0? banks \n  //   .map(bank=>{\n  //     if(stylingContext===\"Normal\"){\n  //       return(\n  //           <div style={{width: \"100%\"}}>\n  //             <h2 style={{padding:\"15px 0\", textAlign:\"left\"}}>{bank.bank_name}</h2>\n\n  //               {bank.accounts.map(account=>{\n  //                 return(\n  //                 <div className='bank_account_container'>\n  //                     <h4 ><a href={`account/${account.id}`}>{account.account_type}</a></h4>\n  //                     <p>{formatter.format(account.account_value)}</p>\n  //                 </div>)\n  //                 }\n  //               )\n  //             }         \n  //           </div>\n  //       )\n  //   }else{\n  //     return(\n  //       <div style={{width:\"100%\"}}>\n  //         <h2 style={{padding:\"15px 0\", textAlign:\"left\"}}>{bank.bank_name}</h2>\n  //         <div className='account_grid'>\n  //           {bank.accounts.map(account=>{\n  //             return(\n  //             <div className='bank_account_container'style={{ padding:\"20px\",width: \"100%\", flexWrap:\"wrap\", alignContent:\"center\", gap:\"25px\", backgroundImage: \"linear-gradient(to right,grey,white)\", borderRadius:\"10px\"}}>\n  //                 <h4 style={{width:\"100%\"}}><a href={`account/${account.id}`}>Account Type: {account.account_type}</a></h4>\n  //                 <p>Account Balance: {formatter.format(account.account_value)}</p>\n  //                 <p style={{color:\"red\"}}>Spent This Month: 200,000</p>\n  //             </div>)\n  //             }\n  //           )\n  //         } \n  //         </div>        \n  //       </div>\n  //   )\n  //   }}) : (\n  //   <p>No banks available.</p>\n  // )\n\n  // const bankElementv2 = accounts.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"_wrapper\",\n    id: \"login\",\n    style: {\n      padding: \"50px\",\n      maxWidth: \"1200px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bank_id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(BanksComponentv2, \"N1PcLwfl26MzBxOMKs01VdvufM0=\");\n_c = BanksComponentv2;\nexport default BanksComponentv2;\nvar _c;\n$RefreshReg$(_c, \"BanksComponentv2\");","map":{"version":3,"names":["React","useContext","AppContext","jsxDEV","_jsxDEV","BanksComponentv2","stylingContext","_s","banks","loading","accounts","console","log","formatter","Intl","NumberFormat","style","currency","trailingZeroDisplay","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","padding","maxWidth","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Components/BankComponentv2.js"],"sourcesContent":["import React, {useContext} from 'react'\nimport AppContext from '../AppContext';\n\nfunction BanksComponentv2({stylingContext}) {\n  const { banks, loading, accounts } = useContext(AppContext)\n  console.log(accounts)\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  \n    // These options can be used to round to whole numbers.\n    trailingZeroDisplay: 'stripIfInteger'\n  });\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  \n  //   const bankElement = banks.length > 0? banks \n  //   .map(bank=>{\n  //     if(stylingContext===\"Normal\"){\n  //       return(\n  //           <div style={{width: \"100%\"}}>\n  //             <h2 style={{padding:\"15px 0\", textAlign:\"left\"}}>{bank.bank_name}</h2>\n\n  //               {bank.accounts.map(account=>{\n  //                 return(\n  //                 <div className='bank_account_container'>\n  //                     <h4 ><a href={`account/${account.id}`}>{account.account_type}</a></h4>\n  //                     <p>{formatter.format(account.account_value)}</p>\n  //                 </div>)\n  //                 }\n  //               )\n  //             }         \n  //           </div>\n  //       )\n  //   }else{\n  //     return(\n  //       <div style={{width:\"100%\"}}>\n  //         <h2 style={{padding:\"15px 0\", textAlign:\"left\"}}>{bank.bank_name}</h2>\n  //         <div className='account_grid'>\n  //           {bank.accounts.map(account=>{\n  //             return(\n  //             <div className='bank_account_container'style={{ padding:\"20px\",width: \"100%\", flexWrap:\"wrap\", alignContent:\"center\", gap:\"25px\", backgroundImage: \"linear-gradient(to right,grey,white)\", borderRadius:\"10px\"}}>\n  //                 <h4 style={{width:\"100%\"}}><a href={`account/${account.id}`}>Account Type: {account.account_type}</a></h4>\n  //                 <p>Account Balance: {formatter.format(account.account_value)}</p>\n  //                 <p style={{color:\"red\"}}>Spent This Month: 200,000</p>\n  //             </div>)\n  //             }\n  //           )\n  //         } \n  //         </div>        \n  //       </div>\n  //   )\n  //   }}) : (\n  //   <p>No banks available.</p>\n  // )\n\n  // const bankElementv2 = accounts.\n  return (\n        <div className='_wrapper' id=\"login\" style={{padding:\"50px\", maxWidth:\"1200px\"}}>\n          <h1>Accounts</h1>\n          <div className='bank_id'>\n            {/* {bankElement} */}\n            {/* {bankElementv2} */}\n          </div>\n      </div>\n\n    \n  )\n}\n\nexport default BanksComponentv2"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,gBAAgBA,CAAC;EAACC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGT,UAAU,CAACC,UAAU,CAAC;EAC3DS,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACrB,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IAC/CC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE,KAAK;IAEf;IACAC,mBAAmB,EAAE;EACvB,CAAC,CAAC;EACF,IAAIT,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAe,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;;EAGA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,oBACMnB,OAAA;IAAKoB,SAAS,EAAC,UAAU;IAACC,EAAE,EAAC,OAAO;IAACT,KAAK,EAAE;MAACU,OAAO,EAAC,MAAM;MAAEC,QAAQ,EAAC;IAAQ,CAAE;IAAAR,QAAA,gBAC9Ef,OAAA;MAAAe,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBnB,OAAA;MAAKoB,SAAS,EAAC;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAIZ;AAAChB,EAAA,CAnEQF,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AAqEzB,eAAeA,gBAAgB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}