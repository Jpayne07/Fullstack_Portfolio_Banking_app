{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Components/AddNewAccountForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport AppContext from '../AppContext';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddNewAccountForm({\n  handleSubmit\n}) {\n  _s();\n  const [holdSuggest, setHoldSuggest] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const {\n    loading,\n    banks\n  } = useContext(AppContext);\n  const bank_names = banks.filter(bank => {\n    return lower(bank.name).includes(lower(holdSuggest));\n  });\n  console.log(bank_names);\n  const FormSchema = yup.object().shape({\n    password: yup.string().min(2, 'Password must be 2 characters long').matches(/[a-z]/, 'Password requires a lowercase letter').matches(/[A-Z]/, 'Password requires an uppercase letter').matches(/[^\\w]/, 'Password requires a symbol'),\n    confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Must match \"password\" field value'),\n    username: yup.string().min(5, 'username must be 5 characters long').matches(/[a-z]/, 'username requires a lowercase letter').matches(/[A-Z]/, 'username requires an uppercase letter'),\n    confirmUsername: yup.string().oneOf([yup.ref('username'), null], 'Must match \"username\" field value')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      confirmUsername: ''\n    },\n    validationSchema: FormSchema,\n    onSubmit: values => {\n      handleSubmit(values.username, values.password);\n    },\n    children: ({\n      isSubmitting,\n      errors\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      className: \"login_form_body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formik_labels\",\n            children: \"Bank Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"confirmUsername\",\n            className: \"formik_fields\",\n            onChange: e => setHoldSuggest(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formik_labels\",\n            children: \"Account Value: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"password\",\n            className: \"formik_fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formik_labels\",\n            children: \"Account Type: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"confirmUsername\",\n            className: \"formik_fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), errors.confirmUsername && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.confirmUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_row\",\n        style: {\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          id: \"login_button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(AddNewAccountForm, \"V9IhvKpo2PQaZ32j5UUvuXu8yj8=\");\n_c = AddNewAccountForm;\nexport default AddNewAccountForm;\nvar _c;\n$RefreshReg$(_c, \"AddNewAccountForm\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Formik","Form","Field","ErrorMessage","AppContext","yup","jsxDEV","_jsxDEV","AddNewAccountForm","handleSubmit","_s","holdSuggest","setHoldSuggest","suggestions","setSuggestions","loading","banks","bank_names","filter","bank","lower","name","includes","console","log","FormSchema","object","shape","password","string","min","matches","confirmPassword","oneOf","ref","username","confirmUsername","initialValues","validationSchema","onSubmit","values","children","isSubmitting","errors","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","style","justifyContent","disabled","id","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Components/AddNewAccountForm.js"],"sourcesContent":["import React, {useEffect, useState, useContext} from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport AppContext from '../AppContext';\n\nimport * as yup from 'yup';\n\n\n\nfunction AddNewAccountForm({handleSubmit}) {\n    const [holdSuggest, setHoldSuggest] = useState('')\n    const [suggestions, setSuggestions] = useState([])\n    const { loading, banks } = useContext(AppContext)\n    const bank_names = banks.filter(bank=>{\n        return lower(bank.name).includes(lower(holdSuggest))\n    })\n\n    console.log(bank_names)\n    const FormSchema = yup.object().shape({\n        password: yup\n            .string()\n            .min(2, 'Password must be 2 characters long')\n            .matches(/[a-z]/, 'Password requires a lowercase letter')\n            .matches(/[A-Z]/, 'Password requires an uppercase letter')\n            .matches(/[^\\w]/, 'Password requires a symbol'),\n        confirmPassword: yup\n            .string()\n            .oneOf([yup.ref('password'), null], 'Must match \"password\" field value'),\n        username: yup\n            .string()\n            .min(5, 'username must be 5 characters long')\n            .matches(/[a-z]/, 'username requires a lowercase letter')\n            .matches(/[A-Z]/, 'username requires an uppercase letter'),\n        confirmUsername: yup\n            .string()\n            .oneOf([yup.ref('username'), null], 'Must match \"username\" field value'),\n        });\n\n  return (\n    <Formik\n    initialValues={{ username: '', password: '', confirmPassword: '', confirmUsername: '' }}\n    validationSchema={FormSchema}\n    onSubmit={(values) => {\n    handleSubmit(values.username, values.password);\n    }}\n>\n    {({ isSubmitting, errors }) => (\n      \n    <Form className='login_form_body'>\n        \n        {/* <div className='form_row'> */}\n        <div className='form_fields'>\n            <div className='form_row'>\n                <label className=\"formik_labels\">Bank Name: </label>\n                <input type=\"text\" name=\"confirmUsername\" className=\"formik_fields\" onChange={(e)=>setHoldSuggest(e.target.value)}/>\n                {errors.username && <p>{errors.username}</p>}\n            </div>\n            <div className='form_row'>\n                <label className=\"formik_labels\">Account Value: </label>\n                <Field type=\"password\" name=\"password\" className=\"formik_fields\"/>\n                {errors.password && <p>{errors.password}</p>}\n            </div>\n            <div className='form_row'>\n                <label className=\"formik_labels\">Account Type: </label>\n                <Field type=\"text\" name=\"confirmUsername\" className=\"formik_fields\"/>\n                {errors.confirmUsername && <p>{errors.confirmUsername}</p>}\n            </div>\n            {/* <div className='form_row'>\n                <label className=\"formik_labels\">Confirm P: </label>\n                <Field type=\"password\" name=\"confirmPassword\" className=\"formik_fields\"/>\n                {errors.confirmPassword && <p>{errors.confirmPassword}</p>}\n            </div> */}\n          </div>\n        \n        \n        <div className='form_row' style={{justifyContent:\"center\"}}>\n        <button type=\"submit\" disabled={isSubmitting} id='login_button'>\n        Submit\n        </button>\n      \n        </div>\n    </Form>\n    )}\n</Formik>\n  )\n}\n\nexport default AddNewAccountForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}