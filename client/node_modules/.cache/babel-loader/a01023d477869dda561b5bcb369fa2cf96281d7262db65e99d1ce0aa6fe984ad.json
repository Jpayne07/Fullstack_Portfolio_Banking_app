{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Pages/AddNewAccount.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport AppContext from '../AppContext';\nimport '../Styling/App.css';\nimport { useNavigate } from 'react-router-dom';\nimport * as yup from 'yup';\nimport AddNewAccountForm from '../Components/AddNewAccountForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddNewAccount() {\n  _s();\n  const navigate = useNavigate();\n  function handleSubmit(bank_name, account_value, account_type) {\n    fetch(\"/api/account\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        bank_name,\n        account_value,\n        account_type\n      })\n    }).then(r => {\n      if (r.ok) {\n        navigate('/accounts');\n      } else {\n        alert(\"Wrong!\");\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background_wrapper\",\n        id: \"login\",\n        style: {\n          width: \"1200px\",\n          maxWidth: \"600px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"_wrapper\",\n          id: \"login\",\n          style: {\n            width: \"1200px\",\n            maxWidth: \"600px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login_content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login_header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Create New Bank Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 47\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Don't have an user account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/signup\",\n                  id: \"signup\",\n                  children: \"Signup\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AddNewAccountForm, {\n              handleSubmit: handleSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(AddNewAccount, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = AddNewAccount;\nexport default AddNewAccount;\nvar _c;\n$RefreshReg$(_c, \"AddNewAccount\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AppContext","useNavigate","yup","AddNewAccountForm","jsxDEV","_jsxDEV","AddNewAccount","_s","navigate","handleSubmit","bank_name","account_value","account_type","fetch","method","headers","body","JSON","stringify","then","r","ok","alert","children","className","id","style","width","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Pages/AddNewAccount.js"],"sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport AppContext from '../AppContext';\nimport '../Styling/App.css'\nimport { useNavigate } from 'react-router-dom';\nimport * as yup from 'yup';\nimport AddNewAccountForm from '../Components/AddNewAccountForm';\n\n\n\n\nfunction AddNewAccount() {\n    const navigate = useNavigate();\n    \n\n    function handleSubmit(bank_name, account_value, account_type) {\n        fetch(\"/api/account\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({bank_name, account_value, account_type}),\n        })\n        .then((r) => {\n          if (r.ok) {\n            navigate('/accounts')\n          \n          }\n          else {\n            alert(\"Wrong!\")\n          }})\n          \n      }\n\n\n  return (\n    <main>\n        <div className='login_wrapper'>\n          <div className='background_wrapper' id='login'style = {{width:\"1200px\", maxWidth:\"600px\"}}>\n            <div className='_wrapper' id='login' style = {{width:\"1200px\", maxWidth:\"600px\"}}> \n              <div className='login_content'>\n                <div className='login_header'><h2>Create New Bank Account</h2>\n                  <p>Don't have an user account? \n                    <a href='/signup' id = \"signup\">Signup</a>\n                  </p>\n                </div>\n                <AddNewAccountForm handleSubmit={handleSubmit}/>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n    \n    </main>\n  )\n}\n\nexport default AddNewAccount"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}