{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nconst API_URL = process.env.REACT_APP_API_URL;\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(undefined);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [errors, setErrors] = useState([]);\n  const [banks, setBanks] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  function handleLogin(username, password, setSubmitting, navigate) {\n    fetch(`/api/login`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(user => {\n          setUser(user);\n          navigate('/');\n        });\n      } else {\n        r.json().then(err => {\n          setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n        });\n      }\n    }).catch(err => {\n      setErrors([err.message || \"Network error. Please try again later.\"]);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  }\n  // this is for the login without signup\n  function mockLogin(username, password, navigate) {\n    fetch(`/api/login`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(user => {\n          setUser(user);\n          navigate('/');\n        });\n      } else {\n        r.json().then(err => {\n          setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n        });\n      }\n    }).catch(err => {\n      setErrors([err.message || \"Network error. Please try again later.\"]);\n    });\n  }\n  useEffect(() => {\n    fetch(`/api/insights`, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(r => r.json()).then(insightsData => {\n      setCategories(insightsData);\n    }).catch(error => {\n      console.log(\"Error fetching insights\", error);\n      setLoading(false);\n    });\n  }, [user]);\n  useEffect(() => {\n    fetch(`/api/accounts`, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(r => r.json()).then(accounts => {\n      setAccounts(accounts);\n    }).catch(error => {\n      console.log(\"Error in fetching banks\", error);\n      setLoading(false);\n    });\n  }, [user]);\n  useEffect(() => {\n    fetch(`/api/banks`, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(r => r.json()).then(banks => {\n      setBanks(banks);\n    }).catch(error => {\n      console.log(\"Error in fetching banks\", error);\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`/api/transactions`, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(r => r.json()).then(transactions => {\n      setTransactions(transactions);\n    }).catch(error => {\n      console.log(\"Error in fetching banks\", error);\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n    fetch(`/api/check_session`, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Session response:\", data);\n\n      // Check if data contains a valid user_id or similar flag\n      if (data.id) {\n        setUser(data);\n        console.log(data);\n      } else {\n        setUser(null);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching session:\", error);\n      setUser(null);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  function handleLogin(username, password, setSubmitting, navigate) {\n    fetch(`/api/login`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(user => {\n          setUser(user);\n          navigate('/');\n        });\n      } else {\n        r.json().then(err => {\n          setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n        });\n      }\n    }).catch(err => {\n      setErrors([err.message || \"Network error. Please try again later.\"]);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  }\n  // this is for the login without signup\n  function mockLogin(username, password, navigate) {\n    fetch(`/api/login`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(user => {\n          setUser(user);\n          navigate('/');\n        });\n      } else {\n        r.json().then(err => {\n          setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n        });\n      }\n    }).catch(err => {\n      setErrors([err.message || \"Network error. Please try again later.\"]);\n    });\n  }\n  // this will seed transactions on individual account pages\n  function handleTransactionSeed(id) {\n    fetch(`/api/transactionseed`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id\n      })\n    }).then(response => response.json()).then(document.location.reload()).catch(error => console.error('Error:', error));\n  }\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      transactions,\n      banks,\n      accounts,\n      categories,\n      user,\n      setUser,\n      setLoading,\n      setCategories,\n      handleLogin,\n      errors,\n      handleTransactionSeed,\n      mockLogin,\n      API_URL\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"saFpj6EQeEnpxuUdvPpQ7vB8KEc=\");\n_c = AppProvider;\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AppContext","API_URL","process","env","REACT_APP_API_URL","AppProvider","children","_s","user","setUser","undefined","categories","setCategories","loading","setLoading","errors","setErrors","banks","setBanks","accounts","setAccounts","transactions","setTransactions","handleLogin","username","password","setSubmitting","navigate","fetch","method","credentials","headers","body","JSON","stringify","then","r","ok","json","err","message","catch","finally","mockLogin","insightsData","error","console","log","response","Error","data","id","handleTransactionSeed","document","location","reload","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect  } from 'react';\n\n\nconst AppContext = createContext();\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport const AppProvider = ({ children }) => {\n  const [user, setUser] = useState(undefined);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [errors, setErrors] = useState([]);\n  const [banks, setBanks] = useState([])\n  const [accounts, setAccounts] = useState([])\n  const [transactions, setTransactions] = useState([])\n\n  function handleLogin(username, password, setSubmitting, navigate) {\n    \n    fetch(`/api/login`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((user) => {\n            setUser(user);\n            navigate('/');\n          })\n        } else {\n          r.json().then((err) => {\n            setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n          });\n        }\n      })\n      .catch((err) => {\n        setErrors([err.message || \"Network error. Please try again later.\"]);\n      })\n      .finally(()=>{\n        setSubmitting(false)\n      })\n      \n  }\n  // this is for the login without signup\n  function mockLogin(username, password, navigate) {\n    fetch(`/api/login`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((user) => {\n            setUser(user);\n            navigate('/')\n          });\n        } else {\n          r.json().then((err) => {\n            setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n          });\n        }\n      })\n      .catch((err) => {\n        setErrors([err.message || \"Network error. Please try again later.\"]);\n      })\n      \n  }\n\n\n  useEffect(() => {\n      \n      fetch(`/api/insights`,{\n        method: 'GET',\n        credentials: 'include'\n      })\n      .then((r) => r.json())\n      .then(insightsData => {\n      setCategories(insightsData);\n    }).catch(error => {\n      console.log(\"Error fetching insights\", error)\n      setLoading(false);\n      \n    });\n  }, [user]);\n\n\n  useEffect(() => {\n    fetch(`/api/accounts`,{\n      method: 'GET',\n      credentials: 'include'\n    })\n    .then((r) => r.json())\n    .then(accounts => {\n      setAccounts(accounts);\n  }).catch(error => {\n    console.log(\"Error in fetching banks\", error)\n    setLoading(false);\n    \n  });\n  }, [user]);\n  \n  useEffect(() => {\n    fetch(`/api/banks`,{\n      method: 'GET',\n      credentials: 'include'\n    })\n    .then((r) => r.json())\n    .then(banks => {\n      setBanks(banks);\n  }).catch(error => {\n    console.log(\"Error in fetching banks\", error)\n    setLoading(false);\n    \n  });\n}, []);\n\n \n\n\nuseEffect(() => {\n  fetch(`/api/transactions`,{\n    method: 'GET',\n    credentials: 'include'\n  })\n  .then((r) => r.json())\n  .then(transactions => {\n    setTransactions(transactions);\n}).catch(error => {\n  console.log(\"Error in fetching banks\", error)\n  setLoading(false);\n  \n});\n}, []);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`/api/check_session`,{\n      method: 'GET',\n      credentials: 'include'\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(\"Session response:\", data);\n        \n        // Check if data contains a valid user_id or similar flag\n        if (data.id) {\n          setUser(data);\n          console.log(data)\n        } else {\n          setUser(null);\n        }\n      })\n      .catch(error => {\n        console.error(\"Error fetching session:\", error);\n        setUser(null);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  function handleLogin(username, password, setSubmitting, navigate) {\n    \n    fetch(`/api/login`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((user) => {\n            setUser(user);\n            navigate('/');\n          })\n        } else {\n          r.json().then((err) => {\n            setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n          });\n        }\n      })\n      .catch((err) => {\n        setErrors([err.message || \"Network error. Please try again later.\"]);\n      })\n      .finally(()=>{\n        setSubmitting(false)\n      })\n      \n  }\n  // this is for the login without signup\n  function mockLogin(username, password, navigate) {\n    fetch(`/api/login`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((user) => {\n            setUser(user);\n            navigate('/')\n          });\n        } else {\n          r.json().then((err) => {\n            setErrors([err.message || \"Invalid login credentials. Please try again.\"]);\n          });\n        }\n      })\n      .catch((err) => {\n        setErrors([err.message || \"Network error. Please try again later.\"]);\n      })\n      \n  }\n  // this will seed transactions on individual account pages\n  function handleTransactionSeed(id) {\n    fetch(`/api/transactionseed`, {\n        method: 'POST', \n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json',  \n        },\n        body: JSON.stringify({ id }),\n    })\n    .then(response => response.json())\n    .then(document.location.reload())\n    .catch(error => console.error('Error:', error)); \n}\n  \n      \n\n  return (\n    <AppContext.Provider value={{loading,\n     transactions,\n     banks,\n     accounts,\n     categories,\n     user,\n     setUser,\n     setLoading,\n     setCategories,\n     handleLogin,\n     errors,\n     handleTransactionSeed,\n     mockLogin, API_URL }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAS,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnE,MAAMC,UAAU,gBAAGL,aAAa,CAAC,CAAC;AAClC,MAAMM,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAACc,SAAS,CAAC;EAC3C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAEpD,SAAS2B,WAAWA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,QAAQ,EAAE;IAEhEC,KAAK,CAAC,YAAY,EAAE;MAClBC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC,CACCU,IAAI,CAAEC,CAAC,IAAK;MACX,IAAIA,CAAC,CAACC,EAAE,EAAE;QACRD,CAAC,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAE3B,IAAI,IAAK;UACtBC,OAAO,CAACD,IAAI,CAAC;UACbmB,QAAQ,CAAC,GAAG,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,MAAM;QACLS,CAAC,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEI,GAAG,IAAK;UACrBvB,SAAS,CAAC,CAACuB,GAAG,CAACC,OAAO,IAAI,8CAA8C,CAAC,CAAC;QAC5E,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,CACDC,KAAK,CAAEF,GAAG,IAAK;MACdvB,SAAS,CAAC,CAACuB,GAAG,CAACC,OAAO,IAAI,wCAAwC,CAAC,CAAC;IACtE,CAAC,CAAC,CACDE,OAAO,CAAC,MAAI;MACXhB,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC;EAEN;EACA;EACA,SAASiB,SAASA,CAACnB,QAAQ,EAAEC,QAAQ,EAAEE,QAAQ,EAAE;IAC/CC,KAAK,CAAC,YAAY,EAAE;MAClBC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC,CACCU,IAAI,CAAEC,CAAC,IAAK;MACX,IAAIA,CAAC,CAACC,EAAE,EAAE;QACRD,CAAC,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAE3B,IAAI,IAAK;UACtBC,OAAO,CAACD,IAAI,CAAC;UACbmB,QAAQ,CAAC,GAAG,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,MAAM;QACLS,CAAC,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEI,GAAG,IAAK;UACrBvB,SAAS,CAAC,CAACuB,GAAG,CAACC,OAAO,IAAI,8CAA8C,CAAC,CAAC;QAC5E,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,CACDC,KAAK,CAAEF,GAAG,IAAK;MACdvB,SAAS,CAAC,CAACuB,GAAG,CAACC,OAAO,IAAI,wCAAwC,CAAC,CAAC;IACtE,CAAC,CAAC;EAEN;EAGA3C,SAAS,CAAC,MAAM;IAEZ+B,KAAK,CAAC,eAAe,EAAC;MACpBC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE;IACf,CAAC,CAAC,CACDK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CACrBH,IAAI,CAACS,YAAY,IAAI;MACtBhC,aAAa,CAACgC,YAAY,CAAC;IAC7B,CAAC,CAAC,CAACH,KAAK,CAACI,KAAK,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAAC;MAC7C/B,UAAU,CAAC,KAAK,CAAC;IAEnB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAGVX,SAAS,CAAC,MAAM;IACd+B,KAAK,CAAC,eAAe,EAAC;MACpBC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE;IACf,CAAC,CAAC,CACDK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CACrBH,IAAI,CAAChB,QAAQ,IAAI;MAChBC,WAAW,CAACD,QAAQ,CAAC;IACzB,CAAC,CAAC,CAACsB,KAAK,CAACI,KAAK,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAAC;MAC7C/B,UAAU,CAAC,KAAK,CAAC;IAEnB,CAAC,CAAC;EACF,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEVX,SAAS,CAAC,MAAM;IACd+B,KAAK,CAAC,YAAY,EAAC;MACjBC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE;IACf,CAAC,CAAC,CACDK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CACrBH,IAAI,CAAClB,KAAK,IAAI;MACbC,QAAQ,CAACD,KAAK,CAAC;IACnB,CAAC,CAAC,CAACwB,KAAK,CAACI,KAAK,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAAC;MAC7C/B,UAAU,CAAC,KAAK,CAAC;IAEnB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAKNjB,SAAS,CAAC,MAAM;IACd+B,KAAK,CAAC,mBAAmB,EAAC;MACxBC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE;IACf,CAAC,CAAC,CACDK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CACrBH,IAAI,CAACd,YAAY,IAAI;MACpBC,eAAe,CAACD,YAAY,CAAC;IACjC,CAAC,CAAC,CAACoB,KAAK,CAACI,KAAK,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAAC;MAC7C/B,UAAU,CAAC,KAAK,CAAC;IAEnB,CAAC,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EAEJjB,SAAS,CAAC,MAAM;IACdiB,UAAU,CAAC,IAAI,CAAC;IAChBc,KAAK,CAAC,oBAAoB,EAAC;MACzBC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE;IACf,CAAC,CAAC,CACCK,IAAI,CAACa,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACX,EAAE,EAAE;QAChB,MAAM,IAAIY,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOD,QAAQ,CAACV,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDH,IAAI,CAACe,IAAI,IAAI;MACZJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,IAAI,CAAC;;MAEtC;MACA,IAAIA,IAAI,CAACC,EAAE,EAAE;QACX1C,OAAO,CAACyC,IAAI,CAAC;QACbJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;MACnB,CAAC,MAAM;QACLzC,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC,CAAC,CACDgC,KAAK,CAACI,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CpC,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,CACDiC,OAAO,CAAC,MAAM;MACb5B,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,SAASS,WAAWA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,QAAQ,EAAE;IAEhEC,KAAK,CAAC,YAAY,EAAE;MAClBC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC,CACCU,IAAI,CAAEC,CAAC,IAAK;MACX,IAAIA,CAAC,CAACC,EAAE,EAAE;QACRD,CAAC,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAE3B,IAAI,IAAK;UACtBC,OAAO,CAACD,IAAI,CAAC;UACbmB,QAAQ,CAAC,GAAG,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,MAAM;QACLS,CAAC,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEI,GAAG,IAAK;UACrBvB,SAAS,CAAC,CAACuB,GAAG,CAACC,OAAO,IAAI,8CAA8C,CAAC,CAAC;QAC5E,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,CACDC,KAAK,CAAEF,GAAG,IAAK;MACdvB,SAAS,CAAC,CAACuB,GAAG,CAACC,OAAO,IAAI,wCAAwC,CAAC,CAAC;IACtE,CAAC,CAAC,CACDE,OAAO,CAAC,MAAI;MACXhB,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC;EAEN;EACA;EACA,SAASiB,SAASA,CAACnB,QAAQ,EAAEC,QAAQ,EAAEE,QAAQ,EAAE;IAC/CC,KAAK,CAAC,YAAY,EAAE;MAClBC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC,CACCU,IAAI,CAAEC,CAAC,IAAK;MACX,IAAIA,CAAC,CAACC,EAAE,EAAE;QACRD,CAAC,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAE3B,IAAI,IAAK;UACtBC,OAAO,CAACD,IAAI,CAAC;UACbmB,QAAQ,CAAC,GAAG,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,MAAM;QACLS,CAAC,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEI,GAAG,IAAK;UACrBvB,SAAS,CAAC,CAACuB,GAAG,CAACC,OAAO,IAAI,8CAA8C,CAAC,CAAC;QAC5E,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,CACDC,KAAK,CAAEF,GAAG,IAAK;MACdvB,SAAS,CAAC,CAACuB,GAAG,CAACC,OAAO,IAAI,wCAAwC,CAAC,CAAC;IACtE,CAAC,CAAC;EAEN;EACA;EACA,SAASY,qBAAqBA,CAACD,EAAE,EAAE;IACjCvB,KAAK,CAAC,sBAAsB,EAAE;MAC1BC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEiB;MAAG,CAAC;IAC/B,CAAC,CAAC,CACDhB,IAAI,CAACa,QAAQ,IAAIA,QAAQ,CAACV,IAAI,CAAC,CAAC,CAAC,CACjCH,IAAI,CAACkB,QAAQ,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAChCd,KAAK,CAACI,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACnD;EAIE,oBACE9C,OAAA,CAACC,UAAU,CAACwD,QAAQ;IAACC,KAAK,EAAE;MAAC5C,OAAO;MACnCQ,YAAY;MACZJ,KAAK;MACLE,QAAQ;MACRR,UAAU;MACVH,IAAI;MACJC,OAAO;MACPK,UAAU;MACVF,aAAa;MACbW,WAAW;MACXR,MAAM;MACNqC,qBAAqB;MACrBT,SAAS;MAAE1C;IAAQ,CAAE;IAAAK,QAAA,EACnBA;EAAQ;IAAAoD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACtD,EAAA,CAhQWF,WAAW;AAAAyD,EAAA,GAAXzD,WAAW;AAkQxB,eAAeL,UAAU;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}