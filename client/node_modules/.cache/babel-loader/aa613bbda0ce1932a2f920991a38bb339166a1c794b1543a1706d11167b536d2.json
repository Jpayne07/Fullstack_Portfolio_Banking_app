{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Components/Transaction_Module.js\";\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionModule({\n  banks,\n  dateSetterFunction\n}) {\n  const uniqueDateSet = new Set();\n  const transactionList = banks.map(bank => {\n    bank.accounts.map(account => {\n      account.transactions.map(transaction => {\n        const date = new Date(transaction.created_at).toLocaleDateString('en-US', {\n          day: '2-digit',\n          month: '2-digit',\n          year: 'numeric'\n        });\n        const shouldRenderDate = uniqueDateSet.has(date);\n        uniqueDateSet.add(date);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction_rows\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"time\",\n            children: shouldRenderDate ? null : date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"transaction_name\",\n            children: transaction.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"Price\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"DollaBill\",\n              children: \"$ \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), transaction.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this);\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: transactionList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = TransactionModule;\nexport default TransactionModule;\nvar _c;\n$RefreshReg$(_c, \"TransactionModule\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","TransactionModule","banks","dateSetterFunction","uniqueDateSet","Set","transactionList","map","bank","accounts","account","transactions","transaction","date","Date","created_at","toLocaleDateString","day","month","year","shouldRenderDate","has","add","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","title","amount","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Components/Transaction_Module.js"],"sourcesContent":["import React, {useEffect} from 'react'\n\nfunction TransactionModule({banks, dateSetterFunction}) {\n  const uniqueDateSet = new Set();\n    const transactionList = banks.map(bank=>{\n      bank.accounts.map(account=>{\n        account.transactions.map(transaction=>{\n        const date = new Date(transaction.created_at).toLocaleDateString('en-US', {\n          day: '2-digit',\n          month: '2-digit',\n          year: 'numeric',\n        })\n        \n        const shouldRenderDate = uniqueDateSet.has(date);\n        uniqueDateSet.add(date)\n        \n          return(\n            \n          <div className='transaction_rows' key={transaction.id}>\n               <p className=\"time\">\n                 {shouldRenderDate?null:date}\n              </p>\n              <p id='transaction_name'>{transaction.title}</p>\n              <p id='Price'><span id='DollaBill'>$ </span>{transaction.amount}</p>\n          </div>)\n      })})\n      \n        \n    })\n    \n  \n  return (\n    \n    <div>{transactionList}</div>\n      \n      \n  )\n}\n\nexport default TransactionModule"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,iBAAiBA,CAAC;EAACC,KAAK;EAAEC;AAAkB,CAAC,EAAE;EACtD,MAAMC,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC7B,MAAMC,eAAe,GAAGJ,KAAK,CAACK,GAAG,CAACC,IAAI,IAAE;IACtCA,IAAI,CAACC,QAAQ,CAACF,GAAG,CAACG,OAAO,IAAE;MACzBA,OAAO,CAACC,YAAY,CAACJ,GAAG,CAACK,WAAW,IAAE;QACtC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,WAAW,CAACG,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;UACxEC,GAAG,EAAE,SAAS;UACdC,KAAK,EAAE,SAAS;UAChBC,IAAI,EAAE;QACR,CAAC,CAAC;QAEF,MAAMC,gBAAgB,GAAGhB,aAAa,CAACiB,GAAG,CAACR,IAAI,CAAC;QAChDT,aAAa,CAACkB,GAAG,CAACT,IAAI,CAAC;QAErB,oBAEAb,OAAA;UAAKuB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC5BxB,OAAA;YAAGuB,SAAS,EAAC,MAAM;YAAAC,QAAA,EAChBJ,gBAAgB,GAAC,IAAI,GAACP;UAAI;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACJ5B,OAAA;YAAG6B,EAAE,EAAC,kBAAkB;YAAAL,QAAA,EAAEZ,WAAW,CAACkB;UAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChD5B,OAAA;YAAG6B,EAAE,EAAC,OAAO;YAAAL,QAAA,gBAACxB,OAAA;cAAM6B,EAAE,EAAC,WAAW;cAAAL,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAAChB,WAAW,CAACmB,MAAM;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GALjChB,WAAW,CAACiB,EAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMhD,CAAC;MACV,CAAC,CAAC;IAAA,CAAC,CAAC;EAGN,CAAC,CAAC;EAGJ,oBAEE5B,OAAA;IAAAwB,QAAA,EAAMlB;EAAe;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAIhC;AAACI,EAAA,GAnCQ/B,iBAAiB;AAqC1B,eAAeA,iBAAiB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}