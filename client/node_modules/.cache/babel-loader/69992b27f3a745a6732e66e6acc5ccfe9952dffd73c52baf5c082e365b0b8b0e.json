{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Components/Transaction_Id_module.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Pencil from '../images/Pencil.svg';\nimport EditableText from './EditableText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Transaction_Id_module({\n  banks\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const uniqueDateSet = new Set();\n  const transactionList = banks.map(bank => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bank_account_container\",\n      children: bank.accounts.filter(account => account.transactions.some(transaction => transaction.id === Number(id))).map(account => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              padding: \"15px 0\",\n              textAlign: \"left\"\n            },\n            children: `${account.banks.bank_name}: ${account.account_type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction_headers\",\n            id: \"singular\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"ACCT#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), account.transactions.filter(transaction => transaction.id === Number(id)).map(transaction => {\n            // date below\n            const date = new Date(transaction.created_at).toLocaleDateString('en-US', {\n              day: '2-digit',\n              month: '2-digit',\n              year: 'numeric'\n            });\n            const shouldRenderDate = uniqueDateSet.has(date);\n            uniqueDateSet.add(date);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transaction_rows\",\n              id: \"singular\",\n              children: [/*#__PURE__*/_jsxDEV(EditableText, {\n                initialText: transaction.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(EditableText, {\n                initialText: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: transaction.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: transaction.card.card_number.toString().slice(-4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(EditableText, {\n                initialText: `$ ${transaction.amount}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)]\n            }, transaction.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: transactionList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Transaction_Id_module, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = Transaction_Id_module;\nexport default Transaction_Id_module;\nvar _c;\n$RefreshReg$(_c, \"Transaction_Id_module\");","map":{"version":3,"names":["React","useState","useParams","Pencil","EditableText","jsxDEV","_jsxDEV","Transaction_Id_module","banks","_s","id","uniqueDateSet","Set","transactionList","map","bank","className","children","accounts","filter","account","transactions","some","transaction","Number","style","width","padding","textAlign","bank_name","account_type","fileName","_jsxFileName","lineNumber","columnNumber","date","Date","created_at","toLocaleDateString","day","month","year","shouldRenderDate","has","add","initialText","title","card","card_number","toString","slice","amount","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Components/Transaction_Id_module.js"],"sourcesContent":["import React, {useState} from 'react'\nimport { useParams } from 'react-router-dom';\nimport Pencil from '../images/Pencil.svg'\nimport EditableText from './EditableText';\n\n\nfunction Transaction_Id_module({banks}) {\n  const { id } = useParams()\n\n  const uniqueDateSet = new Set();\n    const transactionList = banks.map(bank=>{\n      return <div className='bank_account_container'>\n       \n        {bank.accounts\n        .filter((account) => account.transactions.some((transaction) => transaction.id === Number(id))\n      )\n        .map(account=>{\n          return <div style={{width:\"100%\"}}>\n            {/* bank_name below */}\n            <h1 style={{padding:\"15px 0\", textAlign:\"left\"}}>{`${account.banks.bank_name}: ${account.account_type}`}</h1>\n            <div className=\"transaction_headers\" id='singular'>\n            <h4>Description</h4>\n                  <h4>Date</h4>\n                  <h4>ID</h4>\n                  <h4>ACCT#</h4>\n                  <h4>Amount</h4>\n            </div>\n            {account.transactions.filter(transaction =>transaction.id === Number(id))\n            .map((transaction) => {\n              // date below\n              const date = new Date(transaction.created_at).toLocaleDateString('en-US', {\n                day: '2-digit',\n                month: '2-digit',\n                year: 'numeric',\n              }\n            )\n          \n          const shouldRenderDate = uniqueDateSet.has(date);\n          uniqueDateSet.add(date)\n          \n            return(\n              \n            <div className='transaction_rows' key={transaction.id} id=\"singular\">\n                 {/* <p className=\"time\">\n                   {shouldRenderDate?null:date}\n                </p> */}\n                <EditableText initialText={transaction.title} />\n                <EditableText initialText={date} />\n                <p>{transaction.id}</p>\n                <p>{transaction.card.card_number.toString().slice(-4)}</p>\n                <EditableText initialText={`$ ${transaction.amount}`}/>\n                \n                        </div>\n                        )\n                    }\n                  )}\n\n                </div>\n  }\n)\n}\n</div>\n      \n        \n    })\n    \n  \n  return (\n    \n    <div>{transactionList}</div>\n      \n      \n  )\n}\n\nexport default Transaction_Id_module"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}