{"ast":null,"code":"var _jsxFileName = \"/home/jacob/development/code/phase-5/p5-project/client/src/Components/Transaction_Module.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionModule({\n  banks,\n  dateSetterFunction\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const uniqueDateSet = new Set();\n  const transactionList = banks.map(bank => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: bank.accounts.filter(account => account.id === Number(id)).map(account => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: account.banks.bank_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 23\n          }, this), account.transactions.map(transaction => {\n            const date = new Date(transaction.created_at).toLocaleDateString('en-US', {\n              day: '2-digit',\n              month: '2-digit',\n              year: 'numeric'\n            });\n            const shouldRenderDate = uniqueDateSet.has(date);\n            uniqueDateSet.add(date);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transaction_rows\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"time\",\n                children: shouldRenderDate ? null : date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"transaction_name\",\n                children: transaction.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"Price\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"DollaBill\",\n                  children: \"$ \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 31\n                }, this), transaction.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this)]\n            }, transaction.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 13\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: transactionList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionModule, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = TransactionModule;\nexport default TransactionModule;\nvar _c;\n$RefreshReg$(_c, \"TransactionModule\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","TransactionModule","banks","dateSetterFunction","_s","id","uniqueDateSet","Set","transactionList","map","bank","children","accounts","filter","account","Number","bank_name","fileName","_jsxFileName","lineNumber","columnNumber","transactions","transaction","date","Date","created_at","toLocaleDateString","day","month","year","shouldRenderDate","has","add","className","title","amount","_c","$RefreshReg$"],"sources":["/home/jacob/development/code/phase-5/p5-project/client/src/Components/Transaction_Module.js"],"sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom';\n\n\nfunction TransactionModule({banks, dateSetterFunction}) {\n  const { id } = useParams()\n  const uniqueDateSet = new Set();\n    const transactionList = banks.map(bank=>{\n      return <div>\n       \n        {bank.accounts\n        .filter((account) => account.id === Number(id))\n        .map(account=>{\n          return <div><h1>{account.banks.bank_name}</h1>{account.transactions.map(transaction=>{\n            const date = new Date(transaction.created_at).toLocaleDateString('en-US', {\n              day: '2-digit',\n              month: '2-digit',\n              year: 'numeric',\n            })\n          \n          const shouldRenderDate = uniqueDateSet.has(date);\n          uniqueDateSet.add(date)\n          \n            return(\n              \n            <div className='transaction_rows' key={transaction.id}>\n                 <p className=\"time\">\n                   {shouldRenderDate?null:date}\n                </p>\n                <p id='transaction_name'>{transaction.title}</p>\n                <p id='Price'><span id='DollaBill'>$ </span>{transaction.amount}</p>\n            </div>)\n        }\n      )}</div>\n  }\n)\n}</div>\n      \n        \n    })\n    \n  \n  return (\n    \n    <div>{transactionList}</div>\n      \n      \n  )\n}\n\nexport default TransactionModule"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,SAASC,iBAAiBA,CAAC;EAACC,KAAK;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC7B,MAAMC,eAAe,GAAGN,KAAK,CAACO,GAAG,CAACC,IAAI,IAAE;IACtC,oBAAOV,OAAA;MAAAW,QAAA,EAEJD,IAAI,CAACE,QAAQ,CACbC,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACT,EAAE,KAAKU,MAAM,CAACV,EAAE,CAAC,CAAC,CAC9CI,GAAG,CAACK,OAAO,IAAE;QACZ,oBAAOd,OAAA;UAAAW,QAAA,gBAAKX,OAAA;YAAAW,QAAA,EAAKG,OAAO,CAACZ,KAAK,CAACc;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAACN,OAAO,CAACO,YAAY,CAACZ,GAAG,CAACa,WAAW,IAAE;YACnF,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,WAAW,CAACG,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;cACxEC,GAAG,EAAE,SAAS;cACdC,KAAK,EAAE,SAAS;cAChBC,IAAI,EAAE;YACR,CAAC,CAAC;YAEJ,MAAMC,gBAAgB,GAAGxB,aAAa,CAACyB,GAAG,CAACR,IAAI,CAAC;YAChDjB,aAAa,CAAC0B,GAAG,CAACT,IAAI,CAAC;YAErB,oBAEAvB,OAAA;cAAKiC,SAAS,EAAC,kBAAkB;cAAAtB,QAAA,gBAC5BX,OAAA;gBAAGiC,SAAS,EAAC,MAAM;gBAAAtB,QAAA,EAChBmB,gBAAgB,GAAC,IAAI,GAACP;cAAI;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC,eACJpB,OAAA;gBAAGK,EAAE,EAAC,kBAAkB;gBAAAM,QAAA,EAAEW,WAAW,CAACY;cAAK;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChDpB,OAAA;gBAAGK,EAAE,EAAC,OAAO;gBAAAM,QAAA,gBAACX,OAAA;kBAAMK,EAAE,EAAC,WAAW;kBAAAM,QAAA,EAAC;gBAAE;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EAACE,WAAW,CAACa,MAAM;cAAA;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA,GALjCE,WAAW,CAACjB,EAAE;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMhD,CAAC;UACV,CACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MACZ,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAGH,CAAC,CAAC;EAGJ,oBAEEpB,OAAA;IAAAW,QAAA,EAAMH;EAAe;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAIhC;AAAChB,EAAA,CA5CQH,iBAAiB;EAAA,QACTH,SAAS;AAAA;AAAAsC,EAAA,GADjBnC,iBAAiB;AA8C1B,eAAeA,iBAAiB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}